{"ast":null,"code":"//https://codepen.io/davidhalford/pen/ywEva?editors=0010\nfunction getCorrectTextColor(hexBackgroundColor) {\n  if (hexBackgroundColor == null) return;\n  /*\n  From this W3C document: http://www.webmasterworld.com/r.cgi?f=88&d=9769&url=http://www.w3.org/TR/AERT#color-contrast\n   Color brightness is determined by the following formula:\n  ((Red value X 299) + (Green value X 587) + (Blue value X 114)) / 1000\n  I know this could be more compact, but I think this is easier to read/explain.\n   */\n\n  let threshold = 50;\n  /* about half of 256. Lower threshold equals more dark text on dark background  */\n\n  let cutHex = h => {\n    return h.charAt(0) == \"#\" ? h.substring(1, 7) : h;\n  };\n\n  let hexToR = h => {\n    return parseInt(cutHex(h).substring(0, 2), 16);\n  };\n\n  let hexToG = h => {\n    return parseInt(cutHex(h).substring(2, 4), 16);\n  };\n\n  let hexToB = h => {\n    return parseInt(cutHex(h).substring(4, 6), 16);\n  };\n\n  let hRed = hexToR(hexBackgroundColor);\n  let hGreen = hexToG(hexBackgroundColor);\n  let hBlue = hexToB(hexBackgroundColor);\n  let cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\n\n  if (cBrightness > threshold) {\n    return \"black\";\n  } else {\n    return \"white\";\n  }\n}\n\nexport default getCorrectTextColor;","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/utils/getCorrectTextColor.js"],"names":["getCorrectTextColor","hexBackgroundColor","threshold","cutHex","h","charAt","substring","hexToR","parseInt","hexToG","hexToB","hRed","hGreen","hBlue","cBrightness"],"mappings":"AAAA;AAEA,SAASA,mBAAT,CAA6BC,kBAA7B,EAAgD;AAC5C,MAAGA,kBAAkB,IAAI,IAAzB,EACI;AACJ;AACJ;AACA;AACA;AACA;AACA;;AAKI,MAAIC,SAAS,GAAG,EAAhB;AAAoB;;AAGpB,MAAIC,MAAM,GAAGC,CAAC,IAAI;AACd,WAAQA,CAAC,CAACC,MAAF,CAAS,CAAT,KAAa,GAAd,GAAqBD,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAc,CAAd,CAArB,GAAwCF,CAA/C;AACH,GAFD;;AAIA,MAAIG,MAAM,GAAGH,CAAC,IAAI;AACd,WAAOI,QAAQ,CAAEL,MAAM,CAACC,CAAD,CAAP,CAAYE,SAAZ,CAAsB,CAAtB,EAAwB,CAAxB,CAAD,EAA4B,EAA5B,CAAf;AACH,GAFD;;AAGA,MAAIG,MAAM,GAAGL,CAAC,IAAI;AACd,WAAOI,QAAQ,CAAEL,MAAM,CAACC,CAAD,CAAP,CAAYE,SAAZ,CAAsB,CAAtB,EAAwB,CAAxB,CAAD,EAA4B,EAA5B,CAAf;AACH,GAFD;;AAGA,MAAII,MAAM,GAAGN,CAAC,IAAI;AACd,WAAOI,QAAQ,CAAEL,MAAM,CAACC,CAAD,CAAP,CAAYE,SAAZ,CAAsB,CAAtB,EAAwB,CAAxB,CAAD,EAA4B,EAA5B,CAAf;AACH,GAFD;;AAIA,MAAIK,IAAI,GAAGJ,MAAM,CAACN,kBAAD,CAAjB;AACA,MAAIW,MAAM,GAAGH,MAAM,CAACR,kBAAD,CAAnB;AACA,MAAIY,KAAK,GAAGH,MAAM,CAACT,kBAAD,CAAlB;AAIA,MAAIa,WAAW,GAAG,CAAEH,IAAI,GAAG,GAAR,GAAgBC,MAAM,GAAG,GAAzB,GAAiCC,KAAK,GAAG,GAA1C,IAAkD,IAApE;;AACA,MAAIC,WAAW,GAAGZ,SAAlB,EAA4B;AAAC,WAAO,OAAP;AAAgB,GAA7C,MAAmD;AAAE,WAAO,OAAP;AAAgB;AACxE;;AAED,eAAeF,mBAAf","sourcesContent":["//https://codepen.io/davidhalford/pen/ywEva?editors=0010\n\nfunction getCorrectTextColor(hexBackgroundColor){\n    if(hexBackgroundColor == null)\n        return\n    /*\n    From this W3C document: http://www.webmasterworld.com/r.cgi?f=88&d=9769&url=http://www.w3.org/TR/AERT#color-contrast\n\n    Color brightness is determined by the following formula:\n    ((Red value X 299) + (Green value X 587) + (Blue value X 114)) / 1000\n\nI know this could be more compact, but I think this is easier to read/explain.\n\n    */\n\n    let threshold = 50; /* about half of 256. Lower threshold equals more dark text on dark background  */\n\n\n    let cutHex = h => {\n        return (h.charAt(0)==\"#\") ? h.substring(1,7) : h\n    }\n\n    let hexToR = h => {\n        return parseInt((cutHex(h)).substring(0,2),16)\n    }\n    let hexToG = h => {\n        return parseInt((cutHex(h)).substring(2,4),16)\n    }\n    let hexToB = h => {\n        return parseInt((cutHex(h)).substring(4,6),16)\n    }\n\n    let hRed = hexToR(hexBackgroundColor);\n    let hGreen = hexToG(hexBackgroundColor);\n    let hBlue = hexToB(hexBackgroundColor);\n\n\n\n    let cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\n    if (cBrightness > threshold){return \"black\";} else { return \"white\";}\n}\n\nexport default getCorrectTextColor;\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}