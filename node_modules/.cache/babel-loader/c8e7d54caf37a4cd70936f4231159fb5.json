{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getWidth, getHeight } from \"./utils/pageDimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction element(uuid, value, color) {\n  return {\n    uuid,\n    value: value ? value : Math.floor(Math.random() * 100 * 4 + 1),\n    // +20 per evitare la presenza di zeri\n    color: color ? color : getRandomColor()\n  };\n}\n\nconst transitionDuration = 100;\n\nfunction App() {\n  _s();\n\n  let [dataMap, setDataMap] = useState(new Map());\n  let wheel = useRef(null);\n  let [wheelSpeed, setWheelSpeed] = useState(5);\n  let addRectBtn = useRef(null);\n  let addRandomRectBtn = useRef(null);\n  let [svgWidth, setSvgWidth] = useState();\n  let [svgHeight, setSvgHeight] = useState(550);\n  let widthInput = useRef(null);\n  let margin = {\n    top: 40,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  let width = svgWidth - margin.left - margin.right;\n  let height = svgHeight - margin.top - margin.bottom;\n  let dataArray = [...dataMap.values()];\n  let maxYvalue = d3.max(dataArray, d => d.value); // when the user change of the window\n\n  window.onresize = () => {\n    var _document$getElementB;\n\n    setSvgWidth((_document$getElementB = document.getElementById('histogram-container')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.clientWidth);\n  }; // created to get the last and the first node of a d3 selection\n\n\n  d3.selection.prototype.first = function () {\n    return d3.select(this.nodes()[0]);\n  };\n\n  d3.selection.prototype.last = function () {\n    return d3.select(this.nodes()[this.size() - 1]);\n  }; // Adds an element to the map at the end of the map => adds a rect after the last one\n\n\n  function addRandomElementToMap(data, transitionDuration) {\n    let id = uuidv4();\n    dataMap.set(id, element(id, data === null || data === void 0 ? void 0 : data.value, data === null || data === void 0 ? void 0 : data.color)); // needed to scale all the other rects\n\n    let newY = d3.scaleLinear().range([0, height]); //.domain([d3.max([...dataMap.values()], d => d.value), 0])\n\n    d3.select('#yAxis').transition().duration(transitionDuration).call(d3.axisLeft(y)); // movement of the other rects\n\n    d3.select('svg').selectAll('rect').transition().duration(transitionDuration).attr('x', (_, i) => i * (width / (dataArray.length + 1))).attr('y', (d, i) => newY(d.value)).attr('width', width / (dataArray.length + 1 > 0 ? dataArray.length + 1 : 1)).attr('value', d => d.value).attr('height', function (d) {\n      return height - newY(d.value);\n    }); // new rect creation, it must be put after the last rect, with overflow on the x axis\n\n    let newRect = d3.select('svg').select('g').append('rect').attr('x', (dataMap.size - 1) * (width / dataArray.length)) //(dataMap.size)*(width / (dataArray.length)))\n    .attr('y', newY(dataMap.get(id).value)).attr('width', width / (dataArray.length > 0 ? dataArray.length : 1)).attr('value', dataMap.get(id).value).attr('height', height - newY(dataMap.get(id).value)).attr('fill', dataMap.get(id).color); // move the new rect on its right position\n\n    newRect.transition().duration(transitionDuration).attr('x', (dataMap.size - 1) * (width / (dataArray.length + 1))).attr('width', width / (dataArray.length + 1 > 0 ? dataArray.length + 1 : 1));\n    setTimeout(() => setDataMap(new Map(dataMap)), transitionDuration);\n  }\n\n  function addRandomElementToMapAfterXuuid(xUuid) {\n    let dataMapEntries = dataMap.entries();\n    let newMap = new Map();\n    let newElementUuid = uuidv4();\n    [...dataMapEntries].forEach(([k, v]) => {\n      newMap.set(k, v);\n\n      if (k == xUuid) {\n        newMap.set(newElementUuid, element(newElementUuid));\n      }\n    });\n    setDataMap(newMap);\n  } // used to initialize the map\n\n\n  useEffect(() => {\n    var _document$getElementB2;\n\n    let initialMap = new Map();\n    let id = 0;\n    d3.range(30).map(x => {\n      id = uuidv4();\n      initialMap.set(id, element(id));\n    });\n    setDataMap(initialMap);\n    setSvgWidth(parseInt((_document$getElementB2 = document.getElementById('histogram-container')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.clientWidth)); // if i put it in the default value of useState, histogram-container is not loaded yet, so it returns 0\n  }, [null]); // X axis: scale and draw:\n\n  var x = d3.scaleLinear().domain([0, 100]) // axis y range\n  .range([0, width]); //data.lenght]); // axis x range\n  // Y axis: scale and draw:\n\n  var y = d3.scaleLinear().range([0, height]).domain([d3.max(dataArray, d => d.value), 0]).domain([d3.max(dataArray, d => d.value), 0]);\n  d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n    // manage  n (or N) keys\n    if (e.keyIdentifier == 'U+004E') {\n      // 'n' key\n      addRandomElementToMap();\n    }\n  });\n  /* Function to update a value of a specified rect (d3 element)\n  * (with transitions to other rects too) */\n\n  function updateValue(d3element, elementUuid, newValue, transitionTime) {\n    let oldValue = parseFloat(d3.select(d3element).attr('value'));\n    if (newValue <= 0.5) newValue = 0.5;\n\n    if (newValue > maxYvalue) {\n      // here the user changes the value with a value grater then the max value\n      // update y axis value (scale domain)\n      y.domain([newValue, 0]);\n      d3.select('#yAxis').transition().duration(transitionTime).call(d3.axisLeft(y));\n    } else if (oldValue == maxYvalue) {\n      // user decreases the value of the maximum rect\n      let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n      let demainValue = 0;\n      /* if the user decides to decrease the maximum rect there are 2 scenarios:\n              1) newValue for the (old) maximum rect is less then the second maximum value\n                  -> the (old) maximum rect is no longer the maximum rect\n              2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                  -> the (old) maximum rect is still the maximum rect */\n\n      if (newValue < secondMaxYvalue) {\n        // scenario 1)\n        demainValue = secondMaxYvalue;\n      } else {\n        // scenario 2)\n        demainValue = newValue;\n      } // update y axis value (scale domain)\n\n\n      y.domain([demainValue, 0]);\n      d3.select('#yAxis').transition().duration(transitionTime).call(d3.axisLeft(y));\n    } // update each rect\n\n\n    d3.select('svg').selectAll('rect').transition().duration(transitionTime).attr('y', d => y(d.value)).attr('height', d => height - y(d.value)); // update rect modified with new height\n\n    d3.select(d3element).transition().duration(transitionTime).attr('y', y(newValue)).attr('height', height - y(newValue)); // data update after all transition finish\n\n    setTimeout(() => {\n      setDataMap(oldMap => {\n        let newMap = new Map(oldMap);\n        let elementToModify = oldMap.get(elementUuid);\n        elementToModify.value = newValue;\n        newMap.set(elementUuid, elementToModify);\n        return newMap;\n      });\n    }, transitionTime);\n  }\n\n  useLayoutEffect(() => {\n    if (Array.isArray(dataArray)) {\n      d3.select('#histogram svg').remove();\n      let svg = d3.select(\"#histogram\").append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.bottom + margin.top).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      var xAxis = svg.append(\"g\").attr('id', 'xAxis').attr(\"transform\", \"translate(0,\" + height + \")\");\n      let yAxis = svg.append(\"g\").attr('id', 'yAxis');\n      xAxis.call(d3.axisBottom(x));\n      yAxis.call(d3.axisLeft(y));\n      let translateX = width / dataArray.length;\n      let histogram = svg.selectAll('rect').data(dataArray).enter().append('rect').attr('x', (_, i) => i * translateX).attr('y', (d, i) => y(d.value)).attr('width', width / (dataArray.length > 0 ? dataArray.length : 1)).attr('value', d => d.value).attr('height', function (d) {\n        return height - y(d.value);\n      }).style('fill', d => d.color).on('mouseenter', function (event, data) {\n        d3.select(this).attr('opacity', 0.6);\n        let thisElement = this;\n        d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n          // manage up, down and canc and n (or N) keys\n          switch (e.keyIdentifier) {\n            case 'Up':\n              updateValue(thisElement, data.uuid, data.value + wheelSpeed, wheelSpeed * 10);\n              break;\n\n            case 'Down':\n              updateValue(thisElement, data.uuid, data.value - wheelSpeed, wheelSpeed * 10);\n              break;\n\n            case 'U+0008':\n              // delete key (to delete key)\n              dataMap.delete(data.uuid);\n              setDataMap(new Map(dataMap));\n              break;\n\n            case 'U+004E':\n              // 'n' key\n              addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n\n              break;\n          }\n        });\n      }).on('mouseover', function (actual, i) {\n        d3.select(this).attr('stroke', 'black').attr('stroke-width', 3);\n      }).on('wheel', function (wheelInfo, data) {\n        d3.select(this).attr('stroke', 'black');\n        let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n        updateValue(this, data.uuid, newValue, 0);\n      }).on('mouseleave', function (actual, i) {\n        d3.select(this).attr('opacity', 1).attr('stroke', null);\n        d3.select('body').attr('focusable', 'false').on('keydown', function (e) {\n          // manage up, down and canc and n (or N) keys\n          if (e.keyIdentifier == 'U+004E') {\n            // 'n' key\n            addRandomElementToMap();\n          }\n        });\n      }).on('click', function (actual, data) {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          updateValue(this, data.uuid, value, 1000);\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      }).on('dblclick', function (actual, data) {\n        let newDataMap = new Map(dataMap);\n        newDataMap.delete(data.uuid); // TODO double click does not work yet, probably it's the alert on the event 'click'\n\n        d3.select(this).transition().duration(1000).attr('x', parseFloat(d3.select(this).attr('x')) + parseFloat(d3.select(this).attr('width')) / 2).attr('width', 0);\n        setTimeout(() => setDataMap(newDataMap), 1000);\n        return newDataMap;\n        /*  Not working code to animate delete   */\n\n        /*\n         // Y axis: scale and draw:\n        var y = d3.scaleLinear()\n            .range([0, height])\n            .domain([d3.max(dataArray, d => d.value), 0])\n        yAxis.transition()\n            .duration(1000)\n            .call(d3.axisLeft(y));\n           d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n            .transition()\n            .duration(1000)\n            .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n            .attr('y', (d, i) => y(d.value))\n            .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n            .attr('value', d => d.value)\n            .attr('height', function(d) { return height - y(d.value); })\n            .style('fill', d => d.color)\n          setTimeout(() => setDataMap(oldMap => {\n            oldMap.delete(data.uuid);\n              return new Map(oldMap);\n        }), 1000) */\n      }).call(d3.drag().on('start', function dragStarted() {\n        d3.select(this).attr('stroke', 'black'); //.attr('oldX', parseFloat(d3.select(this).attr('x')))\n      }).on('drag', function dragged(event, d) {\n        let newX; // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n\n        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\")) / 2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n\n        if (event.x < elementMiddleX) {\n          // first half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        } else {\n          // second half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        }\n\n        d3.select(this).raise().attr('x', newX);\n      }).on('end', function dragEnded() {\n        d3.select(this).attr('stroke', null); //.transition()\n        //.duration(500)\n        // .attr('x', parseFloat(d3.select(this).attr('oldX')))\n      }));\n      histogram.exit().remove();\n    }\n  }, [dataMap, svgWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid border border-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col pt-2 pb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary mr-3\",\n          ref: addRectBtn,\n          onClick: () => {\n            addRandomElementToMap({\n              value: 900\n            }, 500); // TODO bug: l'asse delle y non si aggiorna bene, sistemare la cosa senza farlo hardcoded ma con il menù\n\n            addRectBtn.current.disabled = true;\n            setTimeout(() => addRectBtn.current.disabled = false, 500);\n          },\n          children: \"Add Rect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary\",\n          ref: addRandomRectBtn,\n          onClick: () => {\n            addRandomElementToMap(null, 500);\n            addRandomRectBtn.current.disabled = true;\n            setTimeout(() => addRandomRectBtn.current.disabled = false, 500);\n          },\n          children: \"Add Random Rect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8 border border-dark p-0\",\n        id: \"histogram-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"histogram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-4 border border-dark \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: wheel,\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            step: \"1\",\n            defaultValue: wheelSpeed,\n            onChange: () => {\n              setWheelSpeed(parseInt(wheel.current.value));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this), wheelSpeed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customRange1\",\n              className: \"form-label row\",\n              children: \"Example range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              className: \"form-range\",\n              id: \"customRange1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"IrKiLnGTMXjsBxaiDRCIqn9Abu4=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","getWidth","getHeight","element","uuid","value","color","Math","floor","random","transitionDuration","App","dataMap","setDataMap","Map","wheel","wheelSpeed","setWheelSpeed","addRectBtn","addRandomRectBtn","svgWidth","setSvgWidth","svgHeight","setSvgHeight","widthInput","margin","top","right","bottom","left","width","height","dataArray","values","maxYvalue","max","d","window","onresize","document","getElementById","clientWidth","selection","prototype","first","select","nodes","last","size","addRandomElementToMap","data","id","set","newY","scaleLinear","range","transition","duration","call","axisLeft","y","selectAll","attr","_","i","length","newRect","append","get","setTimeout","addRandomElementToMapAfterXuuid","xUuid","dataMapEntries","entries","newMap","newElementUuid","forEach","k","v","initialMap","map","x","parseInt","domain","on","e","keyIdentifier","updateValue","d3element","elementUuid","newValue","transitionTime","oldValue","parseFloat","secondMaxYvalue","filter","demainValue","oldMap","elementToModify","Array","isArray","remove","svg","xAxis","yAxis","axisBottom","translateX","histogram","enter","style","event","thisElement","delete","actual","wheelInfo","deltaY","response","prompt","alert","isNaN","newDataMap","drag","dragStarted","dragged","newX","elementMiddleX","raise","dragEnded","exit","current","disabled"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getWidth, getHeight } from \"./utils/pageDimensions\";\n\nfunction element(uuid, value, color){\n    return {\n        uuid,\n        value: value ? value : Math.floor(Math.random() * 100 * 4 + 1), // +20 per evitare la presenza di zeri\n        color: color ? color : getRandomColor()\n    };\n}\n\nconst transitionDuration = 100;\n\nfunction App() {\n\n    let [dataMap, setDataMap] = useState(new Map());\n    let wheel = useRef(null);\n    let [wheelSpeed, setWheelSpeed] = useState(5);\n    let addRectBtn = useRef(null);\n    let addRandomRectBtn = useRef(null);\n    let [svgWidth, setSvgWidth] = useState();\n    let [svgHeight, setSvgHeight] = useState(550);\n    let widthInput = useRef(null);\n\n\n    let margin = {\n        top: 40,\n        right: 20,\n        bottom: 30,\n        left: 40\n    };\n    let width = svgWidth - margin.left - margin.right;\n    let height = svgHeight - margin.top - margin.bottom;\n\n    let dataArray = [...dataMap.values()]\n    let maxYvalue = d3.max(dataArray, d => d.value);\n\n\n    // when the user change of the window\n    window.onresize = () => {\n        setSvgWidth((document.getElementById('histogram-container')?.clientWidth))\n    }\n\n    // created to get the last and the first node of a d3 selection\n    d3.selection.prototype.first = function (){\n        return d3.select(this.nodes()[0])\n    }\n    d3.selection.prototype.last = function (){\n        return d3.select(this.nodes()[this.size()-1])\n    }\n\n\n    // Adds an element to the map at the end of the map => adds a rect after the last one\n    function addRandomElementToMap(data, transitionDuration){\n        let id = uuidv4();\n        dataMap.set(id, element(id, data?.value, data?.color));\n\n\n\n        // needed to scale all the other rects\n        let newY = d3.scaleLinear()\n            .range([0, height])\n            //.domain([d3.max([...dataMap.values()], d => d.value), 0])\n\n        d3.select('#yAxis')\n            .transition()\n            .duration(transitionDuration)\n            .call(d3.axisLeft(y));\n\n        // movement of the other rects\n        d3.select('svg')\n            .selectAll('rect')\n            .transition()\n            .duration(transitionDuration)\n            .attr('x', (_, i) => i*(width / (dataArray.length+1)))\n            .attr('y', (d, i) => newY(d.value))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n            .attr('value', d => d.value)\n            .attr('height', function(d) { return height - newY(d.value); })\n\n        // new rect creation, it must be put after the last rect, with overflow on the x axis\n        let newRect = d3.select('svg')\n            .select('g')\n            .append('rect')\n            .attr('x', (dataMap.size-1)*(width / (dataArray.length)))//(dataMap.size)*(width / (dataArray.length)))\n            .attr('y', newY(dataMap.get(id).value))\n            .attr('width', (width) / (dataArray.length > 0 ? dataArray.length : 1))\n            .attr('value', dataMap.get(id).value)\n            .attr('height', height - newY(dataMap.get(id).value))\n            .attr('fill', dataMap.get(id).color)\n\n        // move the new rect on its right position\n        newRect.transition()\n            .duration(transitionDuration)\n            .attr('x', (dataMap.size-1)*(width / (dataArray.length+1)))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n\n\n\n\n        setTimeout(() => setDataMap(new Map(dataMap)), transitionDuration);\n    }\n\n    function addRandomElementToMapAfterXuuid(xUuid){\n        let dataMapEntries = dataMap.entries();\n\n        let newMap = new Map();\n\n        let newElementUuid = uuidv4();\n        [...dataMapEntries].forEach(([k, v]) => {\n            newMap.set(k, v);\n            if(k == xUuid) {\n                newMap.set(newElementUuid, element(newElementUuid))\n            }\n        })\n\n        setDataMap(newMap);\n\n    }\n\n    // used to initialize the map\n    useEffect(() => {\n        let initialMap = new Map();\n        let id = 0;\n\n        d3.range(30).map(x => {\n            id = uuidv4();\n            initialMap.set(id, element(id));\n        })\n        setDataMap(initialMap);\n        setSvgWidth(parseInt(document.getElementById('histogram-container')?.clientWidth)); // if i put it in the default value of useState, histogram-container is not loaded yet, so it returns 0\n    }, [null]);\n\n\n\n\n\n    // X axis: scale and draw:\n    var x = d3.scaleLinear()\n        .domain([0, 100]) // axis y range\n        .range([0, width]);//data.lenght]); // axis x range\n\n\n    // Y axis: scale and draw:\n    var y = d3.scaleLinear()\n        .range([0, height])\n        .domain([d3.max(dataArray, d => d.value), 0])\n        .domain([d3.max(dataArray, d => d.value), 0])\n\n\n\n    d3.select('body')\n        .attr('focusable', 'true')\n        .on('keydown', function(e) { // manage  n (or N) keys\n            if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                addRandomElementToMap();\n            }\n        });\n\n    /* Function to update a value of a specified rect (d3 element)\n    * (with transitions to other rects too) */\n    function updateValue(d3element, elementUuid, newValue, transitionTime){\n        let oldValue = parseFloat(d3.select(d3element).attr('value'));\n\n        if(newValue <= 0.5)\n            newValue = 0.5\n\n\n        if(newValue > maxYvalue){ // here the user changes the value with a value grater then the max value\n            // update y axis value (scale domain)\n            y.domain([newValue, 0]);\n            d3.select('#yAxis')\n                .transition()\n                .duration(transitionTime)\n                .call(d3.axisLeft(y));\n\n        } else if(oldValue == maxYvalue){ // user decreases the value of the maximum rect\n            let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n            let demainValue = 0;\n\n            /* if the user decides to decrease the maximum rect there are 2 scenarios:\n                    1) newValue for the (old) maximum rect is less then the second maximum value\n                        -> the (old) maximum rect is no longer the maximum rect\n                    2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                        -> the (old) maximum rect is still the maximum rect */\n            if(newValue < secondMaxYvalue){ // scenario 1)\n                demainValue = secondMaxYvalue;\n            } else { // scenario 2)\n                demainValue = newValue;\n            }\n\n            // update y axis value (scale domain)\n            y.domain([demainValue, 0]);\n            d3.select('#yAxis')\n                .transition()\n                .duration(transitionTime)\n                .call(d3.axisLeft(y));\n        }\n\n        // update each rect\n        d3.select('svg')\n            .selectAll('rect')\n            .transition()\n            .duration(transitionTime)\n            .attr('y', d => y(d.value))\n            .attr('height', d => height - y(d.value));\n\n        // update rect modified with new height\n        d3.select(d3element)\n            .transition()\n            .duration(transitionTime)\n            .attr('y', y(newValue))\n            .attr('height', height - y(newValue));\n\n        // data update after all transition finish\n        setTimeout(() => {\n            setDataMap(oldMap => {\n                let newMap = new Map(oldMap);\n                let elementToModify = oldMap.get(elementUuid);\n                elementToModify.value = newValue;\n                newMap.set(elementUuid, elementToModify);\n                return newMap;\n            })\n        }, transitionTime);\n    }\n\n\n\n\n\n\n\n    useLayoutEffect(() => {\n\n        if (Array.isArray(dataArray)) {\n\n            d3.select('#histogram svg').remove();\n\n            let svg = d3.select(\"#histogram\")\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.bottom + margin.top)\n                .append('g')\n                .attr('transform', `translate(${margin.left},${margin.top})`)\n\n\n\n\n\n\n            var xAxis = svg.append(\"g\")\n                .attr('id', 'xAxis')\n                .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n\n            let yAxis = svg.append(\"g\")\n                .attr('id', 'yAxis');\n\n            xAxis.call(d3.axisBottom(x));\n\n            yAxis.call(d3.axisLeft(y));\n\n\n            let translateX = width / (dataArray.length);\n\n\n\n\n            let histogram = svg.selectAll('rect')\n                .data(dataArray)\n                .enter()\n                .append('rect')\n                .attr('x', (_, i) => i*translateX)\n                .attr('y', (d, i) => y(d.value))\n                .attr('width', (width) / (dataArray.length > 0 ? dataArray.length : 1))\n                .attr('value', d => d.value)\n                .attr('height', function(d) { return height - y(d.value); })\n                .style('fill', d => d.color)\n                .on('mouseenter', function (event, data) {\n                    d3.select(this)\n                        .attr('opacity', 0.6)\n\n                    let thisElement = this;\n\n                    d3.select('body')\n                        .attr('focusable', 'true')\n                        .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                            switch (e.keyIdentifier) {\n                                case 'Up':\n                                    updateValue(thisElement, data.uuid, data.value+wheelSpeed, wheelSpeed*10)\n                                    break;\n                                case 'Down':\n                                    updateValue(thisElement, data.uuid, data.value-wheelSpeed, wheelSpeed*10)\n                                    break;\n                                case 'U+0008': // delete key (to delete key)\n                                    dataMap.delete(data.uuid);\n                                    setDataMap(new Map(dataMap))\n                                    break;\n                                case 'U+004E': // 'n' key\n                                    addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n                                    break;\n                            }\n                        });\n\n                })\n                .on('mouseover', function(actual, i){\n                    d3.select(this)\n                        .attr('stroke', 'black')\n                        .attr('stroke-width', 3)\n                })\n                .on('wheel', function (wheelInfo, data){\n\n                    d3.select(this).attr('stroke', 'black')\n                    let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n                    updateValue(this, data.uuid, newValue, 0);\n\n                })\n                .on('mouseleave', function (actual, i) {\n                    d3.select(this)\n                        .attr('opacity', 1)\n                        .attr('stroke', null)\n\n                    d3.select('body')\n                        .attr('focusable', 'false')\n                        .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                            if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                                addRandomElementToMap();\n                            }\n                        });\n                })\n                .on('click', function(actual, data){\n                    var response = prompt(\"Change value:\", data.value);\n                    if (response == null || response == \"\") {\n                        alert(\"You cancelled the prompt.\");\n                        return;\n                    }\n                    if(!isNaN(response)){\n\n                        let value = parseFloat(response);\n\n\n                        updateValue(this, data.uuid, value, 1000);\n                        return;\n                    }\n                    alert(\"Something went wrong!\");\n                })\n                .on('dblclick', function(actual, data){\n\n                    let newDataMap = new Map(dataMap);\n                    newDataMap.delete(data.uuid);\n\n// TODO double click does not work yet, probably it's the alert on the event 'click'\n\n                    d3.select(this)\n                        .transition()\n                        .duration(1000)\n                        .attr('x', parseFloat(d3.select(this).attr('x'))+parseFloat(d3.select(this).attr('width'))/2)\n                        .attr('width', 0)\n\n                    setTimeout(() => setDataMap(newDataMap), 1000);\n                    return newDataMap;\n\n\n\n\n                    /*  Not working code to animate delete   */\n\n                    /*\n\n                    // Y axis: scale and draw:\n                    var y = d3.scaleLinear()\n                        .range([0, height])\n                        .domain([d3.max(dataArray, d => d.value), 0])\n                    yAxis.transition()\n                        .duration(1000)\n                        .call(d3.axisLeft(y));\n\n\n\n                    d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n                        .transition()\n                        .duration(1000)\n                        .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n                        .attr('y', (d, i) => y(d.value))\n                        .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n                        .attr('value', d => d.value)\n                        .attr('height', function(d) { return height - y(d.value); })\n                        .style('fill', d => d.color)\n\n\n                    setTimeout(() => setDataMap(oldMap => {\n                        oldMap.delete(data.uuid);\n\n\n                        return new Map(oldMap);\n                    }), 1000) */\n\n                })\n                .call(d3.drag()\n                    .on('start', function dragStarted(){\n                        d3.select(this)\n                            .attr('stroke', 'black')\n                        //.attr('oldX', parseFloat(d3.select(this).attr('x')))\n                    })\n                    .on('drag', function dragged(event, d){\n\n\n                        let newX;\n                        // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n                        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\"))/2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n                        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n                        if(event.x < (elementMiddleX)) { // first half\n                            newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                        }\n                        else { // second half\n                            newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                        }\n                        d3.select(this)\n                            .raise()\n                            .attr('x', newX)\n                    })\n                    .on('end', function dragEnded(){\n                        d3.select(this)\n                            .attr('stroke', null)\n                        //.transition()\n                        //.duration(500)\n                        // .attr('x', parseFloat(d3.select(this).attr('oldX')))\n                    })\n                )\n            histogram.exit().remove();\n        }\n    }, [dataMap, svgWidth]);\n\n    return (\n\n        <div className=\"container-fluid border border-dark\">\n            <div className='row'>\n                <div className='col pt-2 pb-2'>\n                    <button\n                        className='btn btn-outline-primary mr-3'\n                        ref={addRectBtn}\n                        onClick={() => {\n                            addRandomElementToMap({value: 900}, 500)\n                            // TODO bug: l'asse delle y non si aggiorna bene, sistemare la cosa senza farlo hardcoded ma con il menù\n                            addRectBtn.current.disabled = true;\n                            setTimeout(() => addRectBtn.current.disabled = false, 500)\n                        }}>\n                        Add Rect\n                    </button>\n                    <button\n                        className='btn btn-outline-primary'\n                        ref={addRandomRectBtn}\n                        onClick={() => {\n                            addRandomElementToMap(null,500)\n                            addRandomRectBtn.current.disabled = true;\n                            setTimeout(() => addRandomRectBtn.current.disabled = false, 500)\n                        }}>\n                        Add Random Rect\n                    </button>\n\n                </div>\n            </div>\n            <div className='row'>\n\n\n\n\n\n\n                    <div className='col-12 col-md-8 border border-dark p-0' id='histogram-container'>\n\n                        <div id=\"histogram\" />\n                    </div>\n                    <div className='col-12 col-md-4 border border-dark '>\n<div className='row'>\n                        <input\n                            ref={wheel}\n                            type=\"range\"\n                            min=\"1\"\n                            max=\"20\"\n                            step=\"1\"\n                            defaultValue={wheelSpeed}\n                            onChange={() => {\n                                setWheelSpeed(parseInt(wheel.current.value))\n                            }}/>{wheelSpeed}\n</div>\n                        <div>\n                        </div>\n                        <div className=\"input-group\">\n                            <div>\n                                <label htmlFor=\"customRange1\" className=\"form-label row\">\n                                    Example range\n                                </label>\n                            </div>\n                            <div className=\"row\">\n                                <input type=\"range\" className=\"form-range\" id=\"customRange1\" />\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            </div>\n        </div>\n\n\n\n\n\n\n\n\n    );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}