{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction element() {\n  return {\n    value: Math.floor(Math.random() * 100),\n    color: getRandomColor()\n  };\n}\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  const [dataMap, setData] = useState(new Map().set(uuidv4(), element()).set(uuidv4(), element()));\n  const containerRef = useRef(null);\n  let sizeOfData = dataMap.size;\n  console.log(dataMap.size);\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n      console.log(\"ci entra\");\n      const histogram = select('svg').selectAll('rect').data(data);\n      console.log(\"Array:\", data);\n      histogram.enter().append('rect').merge(histogram).attr('x', (_, i) => i * svgWidth / (data.length + 1) + 100 / data.length).attr('transform', d => `translate(0,${svgHeight - d.value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n      .attr(\"width\", (svgWidth - 100) / (data.length + 1)).attr(\"height\", d => d.value * 300 / svgHeight).attr('fill', d => d.color).on('mouseenter', function (actual, i) {\n        select(this).attr('opacity', 0.6);\n      }).on('mouseleave', function (actual, i) {\n        select(this).attr('opacity', 1);\n      }).on('click', (actual, data) => {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          setData(oldMap => {\n            // code to modify the slot\n            // gestire gli id\n            return newMap;\n          });\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      });\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setData(d => {\n          let newMap = new Map(d);\n          newMap.set(uuidv4(), element());\n          return newMap;\n        });\n      },\n      children: \"ciaoo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...dataMap.keys()].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"1e1Lvxq4HjSBWJZLmvoWNkfxsUI=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","select","getRandomColor","v4","uuidv4","element","value","Math","floor","random","color","App","svgWidth","svgHeight","dataMap","setData","Map","set","containerRef","sizeOfData","size","console","log","data","values","Array","isArray","histogram","selectAll","enter","append","merge","attr","_","i","length","d","on","actual","response","prompt","alert","isNaN","parseFloat","oldMap","newMap","exit","remove","keys","map"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction element(){\n        return {\n            value: Math.floor(Math.random() * 100),\n            color: getRandomColor()\n        };\n}\n\nfunction App() {\n  const svgWidth = 1000;\n  const svgHeight = 300;\n\n  const [dataMap, setData] = useState((new Map()).set(uuidv4(), element()).set(uuidv4(), element()));\n  const containerRef = useRef(null);\n  let sizeOfData = dataMap.size;\n\nconsole.log(dataMap.size);\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n        console.log(\"ci entra\");\n      const histogram = select('svg').selectAll('rect').data(data);\n    console.log(\"Array:\", data);\n      histogram\n          .enter()\n          .append('rect')\n          .merge(histogram)\n          .attr('x', (_, i) => i * svgWidth/(data.length+1) + (100/data.length))\n          .attr('transform', d => `translate(0,${svgHeight-(d.value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n          .attr(\"width\", (svgWidth-100) / (data.length + 1))\n          .attr(\"height\", d => d.value * 300 / svgHeight)\n          .attr('fill', d => d.color)\n          .on('mouseenter', function (actual, i) {\n              select(this).attr('opacity', 0.6)\n          })\n          .on('mouseleave', function (actual, i) {\n              select(this).attr('opacity', 1)\n          })\n          .on('click', (actual, data) => {\n\n              var response = prompt(\"Change value:\", data.value);\n              if (response == null || response == \"\") {\n                  alert(\"You cancelled the prompt.\");\n                  return;\n              }\n              if(!isNaN(response)){\n                  let value = parseFloat(response);\n                  setData(oldMap => {\n                      // code to modify the slot\n\n\n                      // gestire gli id\n                      return newMap;\n                  })\n                  return;\n              }\n              alert(\"Something went wrong!\");\n          })\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n\n  return (\n      <>\n\n        <svg width={svgWidth} height={svgHeight} ref={containerRef} />\n\n        <button\n          onClick={() => {\n            setData(d => {\n                let newMap = new Map(d);\n                newMap.set(uuidv4(), element());\n                return newMap;\n            })\n          }}>\n            ciaoo\n        </button>\n        <div>\n            {[...dataMap.keys()].map(i => <div>{i}</div>)}</div>\n      </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}