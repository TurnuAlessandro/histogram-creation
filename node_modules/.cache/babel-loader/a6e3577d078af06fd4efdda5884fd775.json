{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction element(uuid) {\n  return {\n    uuid,\n    value: Math.floor(Math.random() * 100 + 20),\n    // +20 per evitare la presenza di zeri\n    color: getRandomColor()\n  };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 600;\n  const [dataMap, setDataMap] = useState(new Map());\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let initialMap = new Map(dataMap);\n    let id = 0;\n    d3.range(40).map(x => {\n      id = uuidv4();\n      initialMap.set(id, element(id));\n    });\n    setDataMap(initialMap);\n  }, []);\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n      let margin = {\n        top: 40,\n        right: 30,\n        bottom: 30,\n        left: 40\n      };\n      let width = svgWidth - margin.left - margin.right;\n      let height = svgHeight - margin.top - margin.bottom;\n      d3.select('#histogram svg').remove();\n      let svg = d3.select(\"#histogram\").append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.bottom + margin.top).append('g').attr('transform', `translate(${margin.left},${margin.top})`); // X axis: scale and draw:\n\n      var x = d3.scaleLinear().domain([0, 100]) // axis y range\n      .range([0, width]); //data.lenght]); // axis x range\n\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Y axis: scale and draw:\n\n      var y = d3.scaleLinear().range([0, height]).domain([d3.max(data, d => d.value), 0]);\n      svg.append(\"g\").call(d3.axisLeft(y));\n      console.log(\"x\", x, \"y\", y); // append the bar rectangles to the svg element\n\n      let translateX = width / data.length;\n      let histogram = svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr('x', (_, i) => i * translateX).attr('y', (d, i) => y(d.value)).attr('width', width / (data.length > 0 ? data.length : 1)).attr('value', d => d.value).attr(\"height\", function (d) {\n        return height - y(d.value);\n      }).style('fill', d => d.color).on('mouseenter', function (actual, i) {\n        d3.select(this).attr('opacity', 0.6);\n      }).on('mouseleave', function (actual, i) {\n        d3.select(this).attr('opacity', 1);\n      }).on('click', function (actual, data) {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          setTimeout(() => {\n            d3.select(this).transition().duration(transitionDuration).attr('transform', d => `translate(${d3.select(this).attr('x')},${svgHeight - value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n            .attr(\"height\", d => value * 300 / svgHeight);\n          }, 0);\n          setTimeout(() => {\n            setDataMap(oldMap => {\n              let newMap = new Map(oldMap);\n              newMap.set(data.uuid, {\n                uuid: data.uuid,\n                color: data.color,\n                value: value\n              });\n              return newMap;\n            });\n          }, transitionDuration);\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      }).call(d3.drag().on('start', function dragStarted() {\n        d3.select(this).attr('stroke', 'black');\n      }).on('drag', function dragged(event, d) {\n        let newX; // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n\n        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\")) / 2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n        //TODO aggiustare sfarfallamento\n        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n\n        if (event.x < elementMiddleX) {\n          // first half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        } else {\n          // second half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        }\n\n        d3.select(this).raise().attr('x', newX);\n        d3.select(this).raise().attr('x', event.x);\n      }).on('end', function dragEnded() {\n        d3.select(this).attr('stroke', null); //setDataMap(new Map(dataMap))\n      }));\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"histogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setDataMap(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setDataMap(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"rxVwtXLXhQmftWatZ87YL1Qjo+g=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","element","uuid","value","Math","floor","random","color","transitionDuration","App","svgWidth","svgHeight","dataMap","setDataMap","Map","containerRef","initialMap","id","range","map","x","set","data","values","Array","isArray","margin","top","right","bottom","left","width","height","select","remove","svg","append","attr","scaleLinear","domain","call","axisBottom","y","max","d","axisLeft","console","log","translateX","length","histogram","selectAll","enter","_","i","style","on","actual","response","prompt","alert","isNaN","parseFloat","setTimeout","transition","duration","oldMap","newMap","drag","dragStarted","dragged","event","newX","elementMiddleX","raise","dragEnded","exit"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction element(uuid){\n    return {\n        uuid,\n        value: Math.floor(Math.random() * 100 + 20), // +20 per evitare la presenza di zeri\n        color: getRandomColor()\n    };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n    const svgWidth = 1000;\n    const svgHeight = 600;\n\n    const [dataMap, setDataMap] = useState(new Map());\n    const containerRef = useRef(null);\n\n\n\n    useEffect(() => {\n        let initialMap = new Map(dataMap);\n        let id = 0;\n\n        d3.range(40).map(x => {\n            id = uuidv4();\n            initialMap.set(id, element(id));\n        })\n\n        setDataMap(initialMap);\n    }, []);\n\n    useLayoutEffect(() => {\n        let data = [...dataMap.values()]\n        if (Array.isArray(data)) {\n            let margin = {\n                top: 40,\n                right: 30,\n                bottom: 30,\n                left: 40\n            };\n            let width = svgWidth - margin.left - margin.right;\n            let height = svgHeight - margin.top - margin.bottom;\n\n            d3.select('#histogram svg').remove();\n            let svg = d3.select(\"#histogram\")\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.bottom + margin.top)\n                .append('g')\n                .attr('transform', `translate(${margin.left},${margin.top})`)\n\n\n\n\n            // X axis: scale and draw:\n            var x = d3.scaleLinear()\n                .domain([0, 100]) // axis y range\n                .range([0, width]);//data.lenght]); // axis x range\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x));\n\n\n            // Y axis: scale and draw:\n            var y = d3.scaleLinear()\n                .range([0, height])\n                .domain([d3.max(data, d => d.value), 0])\n            svg.append(\"g\")\n                .call(d3.axisLeft(y));\n            console.log(\"x\", x, \"y\", y)\n            // append the bar rectangles to the svg element\n\n            let translateX = width / (data.length);\n\n            let histogram = svg.selectAll(\"rect\")\n                .data(data)\n                .enter()\n                .append(\"rect\")\n                .attr('x', (_, i) => i*translateX)\n                .attr('y', (d, i) => y(d.value))\n                .attr('width', (width) / (data.length > 0 ? data.length : 1))\n                .attr('value', d => d.value)\n                .attr(\"height\", function(d) { return height - y(d.value); })\n                .style('fill', d => d.color)\n                .on('mouseenter', function (actual, i) {\n                          d3.select(this)\n                              .attr('opacity', 0.6)\n                })\n                .on('mouseleave', function (actual, i) {\n                          d3.select(this)\n                              .attr('opacity', 1)\n                })\n                .on('click', function(actual, data){\n                          var response = prompt(\"Change value:\", data.value);\n                          if (response == null || response == \"\") {\n                              alert(\"You cancelled the prompt.\");\n                              return;\n                          }\n                          if(!isNaN(response)){\n                              let value = parseFloat(response);\n\n                              setTimeout(() => {\n                                  d3.select(this)\n                                      .transition()\n                                      .duration(transitionDuration)\n                                      .attr('transform', d => `translate(${d3.select(this).attr('x')},${svgHeight-(value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n                                      .attr(\"height\", d => value * 300 / svgHeight);\n                              }, 0);\n                              setTimeout(() => {\n                                  setDataMap(oldMap => {\n                                      let newMap = new Map(oldMap);\n                                      newMap.set(data.uuid, {\n                                          uuid: data.uuid,\n                                          color: data.color,\n                                          value: value\n                                      })\n                                      return newMap;\n                                  })\n                              }, transitionDuration);\n                              return;\n                          }\n                          alert(\"Something went wrong!\");\n                      })\n                      .call(d3.drag()\n                              .on('start', function dragStarted(){\n                                  d3.select(this)\n                                      .attr('stroke', 'black');\n                              })\n                              .on('drag', function dragged(event, d){\n\n                                  let newX;\n                                  // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n                                  let elementMiddleX = parseFloat(d3.select(this).attr(\"width\"))/2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n            //TODO aggiustare sfarfallamento\n                                  // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n                                  if(event.x < (elementMiddleX)) { // first half\n                                      newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                                  }\n                                  else { // second half\n                                      newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                                  }\n                                  d3.select(this)\n                                      .raise()\n                                      .attr('x',\n                                          newX\n                                      )\n                                  d3\n                                      .select(this)\n                                      .raise()\n                                      .attr('x', event.x)\n\n\n\n\n                              })\n                              .on('end', function dragEnded(){\n\n                                  d3.select(this)\n                                      .attr('stroke', null);\n\n\n                                  //setDataMap(new Map(dataMap))\n                              })\n\n                      )\n                  histogram.exit().remove();\n        }\n    }, [dataMap]);\n\n    return (\n        <>\n\n            {/*<svg width={svgWidth} height={svgHeight} ref={containerRef}/>*/}\n\n            <div id=\"histogram\" />\n\n            <div >\n                <button\n                    onClick={() => {\n                        setDataMap(d => {\n                            let newMap = new Map(d);\n                            let id = uuidv4();\n                            newMap.set(id, element(id));\n                            return newMap;\n                        })\n                    }}>\n                    ciaoo\n                </button>\n                <button\n                    onClick={() => {\n                        setDataMap(d => {\n                            let newMap = new Map(d);\n                            let id = uuidv4();\n                            newMap.set(id, element(id));\n                            return newMap;\n                        })\n                    }}>\n                    ciaoo\n                </button>\n            </div>\n\n        </>\n    );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}