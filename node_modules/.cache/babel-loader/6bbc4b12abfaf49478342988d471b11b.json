{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListOfElements() {\n  let i = 0;\n\n  let increment = () => {\n    i++;\n    return i;\n  };\n\n  function Element() {\n    return {\n      id: increment(),\n      value: Math.floor(Math.random() * 100),\n      color: getRandomColor()\n    };\n  }\n\n  return () => {\n    increment();\n    return Element();\n  };\n}\n\n_c = ListOfElements;\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  let element = ListOfElements();\n  const [data, setData] = useState([element(), element(), element(), element(), element(), element()]);\n  const containerRef = useRef(null);\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const histogram = select('svg').selectAll('rect').data(data);\n      console.log(\"Array:\", data);\n      histogram.enter().append('rect').merge(histogram).attr('x', (_, i) => i * svgWidth / (data.length + 1) + 100 / data.length).attr('transform', d => `translate(0,${svgHeight - d.value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n      .attr(\"width\", (svgWidth - 100) / (data.length + 1)).attr(\"height\", d => d.value * 300 / svgHeight).attr('fill', d => d.color).on('mouseenter', function (actual, i) {\n        select(this).attr('opacity', 0.6);\n      }).on('mouseleave', function (actual, i) {\n        select(this).attr('opacity', 1);\n      }).on('click', (actual, data) => {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          setData(oldData => {\n            console.log(\"Quaa\", oldData);\n            oldData[data.id] = { ...oldData[data.id],\n              value\n            };\n            /*\n            console.log(\" Data:\", data);\n            console.log(\"New element:\", oldData[data.id]);*/\n\n            return [...oldData];\n          });\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      });\n      histogram.exit().remove();\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setData(d => [...d, element()]);\n      },\n      children: \"ciaoo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(i => i.value + \", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"s95AW6pWIe10v5aQRB52yizQyYU=\");\n\n_c2 = App;\n;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListOfElements\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","select","getRandomColor","ListOfElements","i","increment","Element","id","value","Math","floor","random","color","App","svgWidth","svgHeight","element","data","setData","containerRef","Array","isArray","histogram","selectAll","console","log","enter","append","merge","attr","_","length","d","on","actual","response","prompt","alert","isNaN","parseFloat","oldData","exit","remove","map"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\n\nfunction ListOfElements(){\n    let i = 0;\n    let increment = () => {\n        i++;\n        return i;\n    }\n    function Element(){\n        return {\n            id: increment(),\n            value: Math.floor(Math.random() * 100),\n            color: getRandomColor()\n        };\n    }\n    return () => {\n        increment();\n        return Element()\n    };\n}\n\nfunction App() {\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  let element = ListOfElements();\n  const [data, setData] = useState([\n        element(), element(), element(), element(), element(), element()\n      ]);\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const histogram = select('svg').selectAll('rect').data(data);\n    console.log(\"Array:\", data);\n      histogram\n          .enter()\n          .append('rect')\n          .merge(histogram)\n          .attr('x', (_, i) => i * svgWidth/(data.length+1) + (100/data.length))\n          .attr('transform', d => `translate(0,${svgHeight-(d.value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n          .attr(\"width\", (svgWidth-100) / (data.length + 1))\n          .attr(\"height\", d => d.value * 300 / svgHeight)\n          .attr('fill', d => d.color)\n          .on('mouseenter', function (actual, i) {\n              select(this).attr('opacity', 0.6)\n          })\n          .on('mouseleave', function (actual, i) {\n              select(this).attr('opacity', 1)\n          })\n          .on('click', (actual, data) => {\n\n              var response = prompt(\"Change value:\", data.value);\n              if (response == null || response == \"\") {\n                  alert(\"You cancelled the prompt.\");\n                  return;\n              }\n              if(!isNaN(response)){\n                  let value = parseFloat(response);\n                  setData(oldData => {\n                      console.log(\"Quaa\", oldData);\n                      oldData[data.id] = {\n                          ...oldData[data.id],\n                          value\n                      };\n                      /*\n                      console.log(\" Data:\", data);\n                      console.log(\"New element:\", oldData[data.id]);*/\n                      return [...oldData];\n                  })\n                  return;\n              }\n              alert(\"Something went wrong!\");\n          })\n      histogram.exit().remove();\n    }\n  }, [data]);\n\n  return (\n      <>\n\n        <svg width={svgWidth} height={svgHeight} ref={containerRef} />\n\n        <button\n          onClick={() => {\n            setData(d => [...d, element()])\n          }}>\n            ciaoo\n        </button>\n        <div>\n          {data.map(i => i.value + \", \")}</div>\n      </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}