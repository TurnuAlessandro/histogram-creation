{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction element(uuid) {\n  return {\n    uuid,\n    value: Math.floor(Math.random() * 100 + 20),\n    // +20 per evitare la presenza di zeri\n    color: getRandomColor()\n  };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  const [dataMap, setData] = useState(new Map());\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let initialMap = new Map(dataMap);\n    let id = uuidv4();\n    initialMap.set(id, element(id));\n    id = uuidv4();\n    initialMap.set(id, element(id));\n    id = uuidv4();\n    initialMap.set(id, element(id));\n    setData(initialMap);\n  }, []);\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n      const histogram = d3.select('svg').selectAll('rect').data(data);\n      histogram.enter().append('rect').merge(histogram).attr('x', (_, i) => i * svgWidth / (data.length + 1) + 100 / data.length).attr('transform', d => `translate(0,${svgHeight - d.value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n      .attr(\"width\", (svgWidth - 100) / (data.length + 1)).attr(\"height\", d => d.value * 300 / svgHeight).attr('fill', d => d.color).on('mouseenter', function (actual, i) {\n        d3.select(this).attr('opacity', 0.6);\n      }).on('mouseleave', function (actual, i) {\n        d3.select(this).attr('opacity', 1);\n      }).on('click', function (actual, data) {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          setTimeout(() => {\n            d3.select(this).transition().duration(transitionDuration).attr('transform', d => `translate(0,${svgHeight - value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n            .attr(\"height\", d => value * 300 / svgHeight);\n          }, 0);\n          setTimeout(() => {\n            setData(oldMap => {\n              let newMap = new Map(oldMap);\n              newMap.set(data.uuid, {\n                uuid: data.uuid,\n                color: data.color,\n                value: value\n              });\n              return newMap;\n            });\n          }, transitionDuration);\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      }).call(d3.drag().on('start', function dragStarted() {\n        d3.select(this).attr('stroke', 'black');\n      }).on('drag', function dragged(event, d) {\n        // bisogna capire se è nella prima metà o nella seconda\n        let elementWidth = d3.select(this).attr('width') + d.x;\n        if (elementWidth / 2 > event.x - d.x) // prima metà\n          console.log('prima metà');else console.log('seconda metà');\n        /*d3.select(this)\n            .raise()\n            .attr('oldX', d.x)\n            .attr('x',\n                d.x = event.x - ((svgWidth-100) / (data.length + 1))/2\n            )*/\n      }).on('end', function dragEnded() {\n        /*\n        d3.select(this)\n            .attr('x', d3.select(this).attr('oldX'))\n            .attr('stroke', null);\n        * */\n        //setData(new Map(dataMap))\n      }));\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setData(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setData(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"LQ+asEGH2HedXfQCKNOgXOw2q3U=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","element","uuid","value","Math","floor","random","color","transitionDuration","App","svgWidth","svgHeight","dataMap","setData","Map","containerRef","initialMap","id","set","data","values","Array","isArray","histogram","select","selectAll","enter","append","merge","attr","_","i","length","d","on","actual","response","prompt","alert","isNaN","parseFloat","setTimeout","transition","duration","oldMap","newMap","call","drag","dragStarted","dragged","event","elementWidth","x","console","log","dragEnded","exit","remove"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction element(uuid){\n        return {\n            uuid,\n            value: Math.floor(Math.random() * 100 + 20), // +20 per evitare la presenza di zeri\n            color: getRandomColor()\n        };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n  const svgWidth = 1000;\n  const svgHeight = 300;\n\n  const [dataMap, setData] = useState(new Map());\n  const containerRef = useRef(null);\n\n\n    useEffect(() => {\n        let initialMap = new Map(dataMap);\n        let id = uuidv4();\n        initialMap.set(id, element(id));\n        id = uuidv4();\n        initialMap.set(id, element(id));\n        id = uuidv4();\n        initialMap.set(id, element(id));\n        setData(initialMap);\n    }, []);\n\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n      const histogram = d3.select('svg').selectAll('rect').data(data);\n      histogram\n          .enter()\n          .append('rect')\n          .merge(histogram)\n          .attr('x', (_, i) => i * svgWidth/(data.length+1) + (100/data.length))\n          .attr('transform', d => `translate(0,${svgHeight-(d.value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n          .attr(\"width\", (svgWidth-100) / (data.length + 1))\n          .attr(\"height\", d => d.value * 300 / svgHeight)\n          .attr('fill', d => d.color)\n          .on('mouseenter', function (actual, i) {\n              d3.select(this)\n                  .attr('opacity', 0.6)\n          })\n          .on('mouseleave', function (actual, i) {\n              d3.select(this)\n                  .attr('opacity', 1)\n          })\n          .on('click', function(actual, data){\n              var response = prompt(\"Change value:\", data.value);\n              if (response == null || response == \"\") {\n                  alert(\"You cancelled the prompt.\");\n                  return;\n              }\n              if(!isNaN(response)){\n                  let value = parseFloat(response);\n\n                  setTimeout(() => {\n                      d3.select(this)\n                          .transition()\n                          .duration(transitionDuration)\n                          .attr('transform', d => `translate(0,${svgHeight-(value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n                          .attr(\"height\", d => value * 300 / svgHeight);\n                  }, 0);\n                  setTimeout(() => {\n                      setData(oldMap => {\n                          let newMap = new Map(oldMap);\n                          newMap.set(data.uuid, {\n                              uuid: data.uuid,\n                              color: data.color,\n                              value: value\n                          })\n                          return newMap;\n                      })\n                  }, transitionDuration);\n                  return;\n              }\n              alert(\"Something went wrong!\");\n          })\n          .call(d3.drag()\n                  .on('start', function dragStarted(){\n                      d3.select(this)\n                          .attr('stroke', 'black');\n                  })\n                  .on('drag', function dragged(event, d){\n                      // bisogna capire se è nella prima metà o nella seconda\n                      let elementWidth = d3.select(this).attr('width')+d.x;\n                      if(elementWidth/2 > (event.x-d.x)) // prima metà\n                          console.log('prima metà')\n                      else\n                          console.log('seconda metà')\n                      /*d3.select(this)\n                          .raise()\n                          .attr('oldX', d.x)\n                          .attr('x',\n                              d.x = event.x - ((svgWidth-100) / (data.length + 1))/2\n                          )*/\n                  })\n                  .on('end', function dragEnded(){\n                      /*\n                      d3.select(this)\n                          .attr('x', d3.select(this).attr('oldX'))\n                          .attr('stroke', null);\n                      * */\n\n                      //setData(new Map(dataMap))\n                  })\n\n          )\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n\n  return (\n      <>\n\n        <svg width={svgWidth} height={svgHeight} ref={containerRef} />\n\n        <div>\n            <button\n                onClick={() => {\n                    setData(d => {\n                        let newMap = new Map(d);\n                        let id = uuidv4();\n                        newMap.set(id, element(id));\n                        return newMap;\n                    })\n                }}>\n                ciaoo\n            </button>\n            <button\n                onClick={() => {\n                    setData(d => {\n                        let newMap = new Map(d);\n                        let id = uuidv4();\n                        newMap.set(id, element(id));\n                        return newMap;\n                    })\n                }}>\n                ciaoo\n            </button>\n        </div>\n\n      </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}