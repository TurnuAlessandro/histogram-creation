{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction element(uuid) {\n  return {\n    uuid,\n    value: Math.floor(Math.random() * 100 + 20),\n    // +20 per evitare la presenza di zeri\n    color: getRandomColor()\n  };\n}\n\nconst transitionDuration = 100;\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 600;\n  let [dataMap, setDataMap] = useState(new Map());\n  let wheel = useRef(null);\n  let [wheelSpeed, setWheelSpeed] = useState(5);\n  let margin = {\n    top: 40,\n    right: 30,\n    bottom: 30,\n    left: 40\n  };\n  let width = svgWidth - margin.left - margin.right;\n  let height = svgHeight - margin.top - margin.bottom;\n  let dataArray = [...dataMap.values()];\n  let maxYvalue = d3.max(dataArray, d => d.value);\n\n  d3.selection.prototype.first = function () {\n    return d3.select(this.nodes()[0]);\n  };\n\n  d3.selection.prototype.last = function () {\n    return d3.select(this.nodes()[this.size() - 1]);\n  }; // Adds an element to the map at the end of the map => adds a rect after the last one\n\n\n  function addRandomElementToMap(transitionDuration) {\n    let id = uuidv4();\n    dataMap.set(id, element(id));\n    let newY = d3.scaleLinear().range([0, height]).domain([d3.max([...dataMap.values()], d => d.value), 0]);\n    /*\n            d3.select('svg')\n                .selectAll('rect')\n                .transition()\n                .duration(transitionDuration)\n                .attr('x', (_, i) => i*(width / (dataArray.length+1)))\n                .attr('y', (d, i) => newY(d.value))\n                .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n                .attr('value', d => d.value)\n                .attr('height', function(d) { return height - newY(d.value); })\n    */\n\n    d3.select('svg').selectAll('rect').last().append('rect').attr('x', (dataMap.size - 1) * (width / (dataArray.length + 1))).attr('y', newY(dataMap.get(id).value)).attr('width', width / (dataArray.length + 1 > 0 ? dataArray.length + 1 : 1)).attr('value', dataMap.get(id).value).attr('height', function (d) {\n      return height - newY(dataMap.get(id).value);\n    });\n    console.log(d3.select('svg').selectAll('rect').last().transition().duration(1000).attr('width', width / 2)); // setTimeout(() => setDataMap(new Map(dataMap)), transitionDuration);\n  }\n\n  function addRandomElementToMapAfterXuuid(xUuid) {\n    let dataMapEntries = dataMap.entries();\n    let newMap = new Map();\n    let newElementUuid = uuidv4();\n    [...dataMapEntries].forEach(([k, v]) => {\n      newMap.set(k, v);\n\n      if (k == xUuid) {\n        newMap.set(newElementUuid, element(newElementUuid));\n      }\n    });\n    setDataMap(newMap);\n  }\n\n  useEffect(() => {\n    let initialMap = new Map(dataMap);\n    let id = 0;\n    d3.range(3).map(x => {\n      id = uuidv4();\n      initialMap.set(id, element(id));\n    });\n    setDataMap(initialMap);\n  }, []);\n  useLayoutEffect(() => {\n    if (Array.isArray(dataArray)) {\n      d3.select('#histogram svg').remove();\n      let svg = d3.select(\"#histogram\").append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.bottom + margin.top).append('g').attr('transform', `translate(${margin.left},${margin.top})`); // X axis: scale and draw:\n\n      var x = d3.scaleLinear().domain([0, 100]) // axis y range\n      .range([0, width]); //data.lenght]); // axis x range\n\n      var xAxis = svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\");\n      xAxis.call(d3.axisBottom(x)); // Y axis: scale and draw:\n\n      var y = d3.scaleLinear().range([0, height]).domain([d3.max(dataArray, d => d.value), 0]);\n      let yAxis = svg.append(\"g\");\n      yAxis.call(d3.axisLeft(y));\n      let translateX = width / dataArray.length;\n      d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n        // manage up, down and canc and n (or N) keys\n        if (e.keyIdentifier == 'U+004E') {\n          // 'n' key\n          addRandomElementToMap();\n        }\n      });\n      /* Function to update a value of a specified rect (d3 element)\n      * (with transitions to other rects too) */\n\n      let updateValue = (d3element, elementUuid, newValue, transitionTime) => {\n        let oldValue = parseFloat(d3.select(d3element).attr('value'));\n\n        if (newValue > maxYvalue) {\n          // here the user changes the value with a value grater then the max value\n          // update y axis value (scale domain)\n          y.domain([newValue, 0]);\n          yAxis.transition().duration(transitionTime).call(d3.axisLeft(y));\n        } else if (oldValue == maxYvalue) {\n          // user decreases the value of the maximum rect\n          let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n          let demainValue = 0;\n          /* if the user decides to decrease the maximum rect there are 2 scenarios:\n                  1) newValue for the (old) maximum rect is less then the second maximum value\n                      -> the (old) maximum rect is no longer the maximum rect\n                  2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                      -> the (old) maximum rect is still the maximum rect */\n\n          if (newValue < secondMaxYvalue) {\n            // scenario 1)\n            demainValue = secondMaxYvalue;\n          } else {\n            // scenario 2)\n            demainValue = newValue;\n          } // update y axis value (scale domain)\n\n\n          y.domain([demainValue, 0]);\n          yAxis.transition().duration(transitionTime).call(d3.axisLeft(y));\n        } // update each rect\n\n\n        d3.select('svg').selectAll('rect').transition().duration(transitionTime).attr('y', d => y(d.value)).attr('height', d => height - y(d.value)); // update rect modified with new height\n\n        d3.select(d3element).transition().duration(transitionTime).attr('y', y(newValue)).attr('height', height - y(newValue)); // data update after all transition finish\n\n        setTimeout(() => {\n          setDataMap(oldMap => {\n            let newMap = new Map(oldMap);\n            let elementToModify = oldMap.get(elementUuid);\n            elementToModify.value = newValue;\n            newMap.set(elementUuid, elementToModify);\n            return newMap;\n          });\n        }, transitionTime);\n      };\n\n      let histogram = svg.selectAll('rect').data(dataArray).enter().append('rect').attr('x', (_, i) => i * translateX).attr('y', (d, i) => y(d.value)).attr('width', width / (dataArray.length > 0 ? dataArray.length : 1)).attr('value', d => d.value).attr('height', function (d) {\n        return height - y(d.value);\n      }).style('fill', d => d.color).on('mouseenter', function (event, data) {\n        d3.select(this).attr('opacity', 0.6);\n        let thisElement = this;\n        d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n          // manage up, down and canc and n (or N) keys\n          switch (e.keyIdentifier) {\n            case 'Up':\n              updateValue(thisElement, data.uuid, data.value + wheelSpeed, wheelSpeed * 10);\n              break;\n\n            case 'Down':\n              updateValue(thisElement, data.uuid, data.value - wheelSpeed, wheelSpeed * 10);\n              break;\n\n            case 'U+0008':\n              // delete key (to delete key)\n              dataMap.delete(data.uuid);\n              setDataMap(new Map(dataMap));\n              break;\n\n            case 'U+004E':\n              // 'n' key\n              addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n\n              break;\n          }\n        });\n      }).on('mouseover', function (actual, i) {\n        d3.select(this).attr('stroke', 'black').attr('stroke-width', 3);\n      }).on('wheel', function (wheelInfo, data) {\n        d3.select(this).attr('stroke', 'black');\n        let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n        updateValue(this, data.uuid, newValue, 0);\n      }).on('mouseleave', function (actual, i) {\n        d3.select(this).attr('opacity', 1).attr('stroke', null);\n        d3.select('body').attr('focusable', 'false').on('keydown', function (e) {\n          // manage up, down and canc and n (or N) keys\n          if (e.keyIdentifier == 'U+004E') {\n            // 'n' key\n            addRandomElementToMap();\n          }\n        });\n      }).on('click', function (actual, data) {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          updateValue(this, data.uuid, value, 1000);\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      }).on('dblclick', function (actual, data) {\n        let newDataMap = new Map(dataMap);\n        newDataMap.delete(data.uuid); // TODO double click does not work yet, probably it's the alert on the event 'click'\n\n        d3.select(this).transition().duration(1000).attr('x', parseFloat(d3.select(this).attr('x')) + parseFloat(d3.select(this).attr('width')) / 2).attr('width', 0);\n        setTimeout(() => setDataMap(newDataMap), 1000);\n        return newDataMap;\n        /*  Not working code to animate delete   */\n\n        /*\n         // Y axis: scale and draw:\n        var y = d3.scaleLinear()\n            .range([0, height])\n            .domain([d3.max(dataArray, d => d.value), 0])\n        yAxis.transition()\n            .duration(1000)\n            .call(d3.axisLeft(y));\n           d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n            .transition()\n            .duration(1000)\n            .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n            .attr('y', (d, i) => y(d.value))\n            .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n            .attr('value', d => d.value)\n            .attr('height', function(d) { return height - y(d.value); })\n            .style('fill', d => d.color)\n          setTimeout(() => setDataMap(oldMap => {\n            oldMap.delete(data.uuid);\n              return new Map(oldMap);\n        }), 1000) */\n      }).call(d3.drag().on('start', function dragStarted() {\n        d3.select(this).attr('stroke', 'black');\n      }).on('drag', function dragged(event, d) {\n        let newX; // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n\n        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\")) / 2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n\n        if (event.x < elementMiddleX) {\n          // first half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        } else {\n          // second half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        }\n\n        d3.select(this).raise().attr('x', newX);\n        d3.select(this).raise().attr('x', event.x);\n      }).on('end', function dragEnded() {\n        d3.select(this).attr('stroke', null);\n      }));\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"histogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addRandomElementToMap(500),\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: wheel,\n        type: \"range\",\n        min: \"1\",\n        max: \"20\",\n        step: \"1\",\n        id: \"wheelController\",\n        defaultValue: wheelSpeed,\n        onChange: () => {\n          setWheelSpeed(parseInt(wheel.current.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: wheelSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"W7aVYWUX9K9op1YVw5A0yfKrryU=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","element","uuid","value","Math","floor","random","color","transitionDuration","App","svgWidth","svgHeight","dataMap","setDataMap","Map","wheel","wheelSpeed","setWheelSpeed","margin","top","right","bottom","left","width","height","dataArray","values","maxYvalue","max","d","selection","prototype","first","select","nodes","last","size","addRandomElementToMap","id","set","newY","scaleLinear","range","domain","selectAll","append","attr","length","get","console","log","transition","duration","addRandomElementToMapAfterXuuid","xUuid","dataMapEntries","entries","newMap","newElementUuid","forEach","k","v","initialMap","map","x","Array","isArray","remove","svg","xAxis","call","axisBottom","y","yAxis","axisLeft","translateX","on","e","keyIdentifier","updateValue","d3element","elementUuid","newValue","transitionTime","oldValue","parseFloat","secondMaxYvalue","filter","demainValue","setTimeout","oldMap","elementToModify","histogram","data","enter","_","i","style","event","thisElement","delete","actual","wheelInfo","deltaY","response","prompt","alert","isNaN","newDataMap","drag","dragStarted","dragged","newX","elementMiddleX","raise","dragEnded","exit","parseInt","current"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction element(uuid){\n    return {\n        uuid,\n        value: Math.floor(Math.random() * 100 + 20), // +20 per evitare la presenza di zeri\n        color: getRandomColor()\n    };\n}\n\nconst transitionDuration = 100;\n\nfunction App() {\n    const svgWidth = 1000;\n    const svgHeight = 600;\n\n    let [dataMap, setDataMap] = useState(new Map());\n    let wheel = useRef(null);\n    let [wheelSpeed, setWheelSpeed] = useState(5);\n\n\n    let margin = {\n        top: 40,\n        right: 30,\n        bottom: 30,\n        left: 40\n    };\n    let width = svgWidth - margin.left - margin.right;\n    let height = svgHeight - margin.top - margin.bottom;\n\n    let dataArray = [...dataMap.values()]\n    let maxYvalue = d3.max(dataArray, d => d.value);\n\n\n    d3.selection.prototype.first = function (){\n        return d3.select(this.nodes()[0])\n    }\n    d3.selection.prototype.last = function (){\n        return d3.select(this.nodes()[this.size()-1])\n    }\n\n\n    // Adds an element to the map at the end of the map => adds a rect after the last one\n    function addRandomElementToMap(transitionDuration){\n        let id = uuidv4();\n        dataMap.set(id, element(id));\n\n        let newY = d3.scaleLinear()\n            .range([0, height])\n            .domain([d3.max([...dataMap.values()], d => d.value), 0])\n/*\n        d3.select('svg')\n            .selectAll('rect')\n            .transition()\n            .duration(transitionDuration)\n            .attr('x', (_, i) => i*(width / (dataArray.length+1)))\n            .attr('y', (d, i) => newY(d.value))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n            .attr('value', d => d.value)\n            .attr('height', function(d) { return height - newY(d.value); })\n*/\n\n        d3.select('svg')\n            .selectAll('rect')\n            .last()\n            .append('rect')\n            .attr('x', (dataMap.size-1)*(width / (dataArray.length+1)))\n            .attr('y', newY(dataMap.get(id).value))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n            .attr('value', dataMap.get(id).value)\n            .attr('height', function(d) { return height - newY(dataMap.get(id).value); })\n\n\n        console.log(d3.select('svg').selectAll('rect').last().transition().duration(1000).attr('width', width/2))\n\n       // setTimeout(() => setDataMap(new Map(dataMap)), transitionDuration);\n    }\n\n    function addRandomElementToMapAfterXuuid(xUuid){\n        let dataMapEntries = dataMap.entries();\n\n        let newMap = new Map();\n\n        let newElementUuid = uuidv4();\n        [...dataMapEntries].forEach(([k, v]) => {\n            newMap.set(k, v);\n            if(k == xUuid) {\n                newMap.set(newElementUuid, element(newElementUuid))\n            }\n        })\n\n        setDataMap(newMap);\n\n    }\n\n    useEffect(() => {\n        let initialMap = new Map(dataMap);\n        let id = 0;\n\n        d3.range(3).map(x => {\n            id = uuidv4();\n            initialMap.set(id, element(id));\n        })\n\n        setDataMap(initialMap);\n\n\n\n    }, []);\n\n\n\n    useLayoutEffect(() => {\n\n\n\n        if (Array.isArray(dataArray)) {\n\n\n            d3.select('#histogram svg').remove();\n            let svg = d3.select(\"#histogram\")\n                .append('svg')\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.bottom + margin.top)\n                .append('g')\n                .attr('transform', `translate(${margin.left},${margin.top})`)\n\n\n\n\n            // X axis: scale and draw:\n            var x = d3.scaleLinear()\n                .domain([0, 100]) // axis y range\n                .range([0, width]);//data.lenght]); // axis x range\n            var xAxis = svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\");\n            xAxis.call(d3.axisBottom(x));\n\n\n            // Y axis: scale and draw:\n            var y = d3.scaleLinear()\n                .range([0, height])\n                .domain([d3.max(dataArray, d => d.value), 0])\n            let yAxis = svg.append(\"g\");\n\n            yAxis.call(d3.axisLeft(y));\n\n\n            let translateX = width / (dataArray.length);\n\n\n            d3.select('body')\n                .attr('focusable', 'true')\n                .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                    if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                        addRandomElementToMap();\n\n                    }\n                });\n\n            /* Function to update a value of a specified rect (d3 element)\n            * (with transitions to other rects too) */\n            let updateValue = (d3element, elementUuid, newValue, transitionTime) => {\n                let oldValue = parseFloat(d3.select(d3element).attr('value'));\n\n                if(newValue > maxYvalue){ // here the user changes the value with a value grater then the max value\n\n                    // update y axis value (scale domain)\n                    y.domain([newValue, 0]);\n                    yAxis.transition()\n                        .duration(transitionTime)\n                        .call(d3.axisLeft(y));\n\n                } else if(oldValue == maxYvalue){ // user decreases the value of the maximum rect\n                    let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n                    let demainValue = 0;\n\n                    /* if the user decides to decrease the maximum rect there are 2 scenarios:\n                            1) newValue for the (old) maximum rect is less then the second maximum value\n                                -> the (old) maximum rect is no longer the maximum rect\n                            2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                                -> the (old) maximum rect is still the maximum rect */\n                    if(newValue < secondMaxYvalue){ // scenario 1)\n                        demainValue = secondMaxYvalue;\n                    } else { // scenario 2)\n                        demainValue = newValue;\n                    }\n\n                    // update y axis value (scale domain)\n                    y.domain([demainValue, 0]);\n                    yAxis.transition()\n                        .duration(transitionTime)\n                        .call(d3.axisLeft(y));\n                }\n\n                // update each rect\n                d3.select('svg')\n                    .selectAll('rect')\n                    .transition()\n                    .duration(transitionTime)\n                    .attr('y', d => y(d.value))\n                    .attr('height', d => height - y(d.value));\n\n                // update rect modified with new height\n                d3.select(d3element)\n                    .transition()\n                    .duration(transitionTime)\n                    .attr('y', y(newValue))\n                    .attr('height', height - y(newValue));\n\n                // data update after all transition finish\n                setTimeout(() => {\n                    setDataMap(oldMap => {\n                        let newMap = new Map(oldMap);\n                        let elementToModify = oldMap.get(elementUuid);\n                        elementToModify.value = newValue;\n                        newMap.set(elementUuid, elementToModify);\n                        return newMap;\n                    })\n                }, transitionTime);\n            }\n\n\n\n\n            let histogram = svg.selectAll('rect')\n                .data(dataArray)\n                .enter()\n                .append('rect')\n                .attr('x', (_, i) => i*translateX)\n                .attr('y', (d, i) => y(d.value))\n                .attr('width', (width) / (dataArray.length > 0 ? dataArray.length : 1))\n                .attr('value', d => d.value)\n                .attr('height', function(d) { return height - y(d.value); })\n                .style('fill', d => d.color)\n                .on('mouseenter', function (event, data) {\n                    d3.select(this)\n                        .attr('opacity', 0.6)\n\n                    let thisElement = this;\n\n                    d3.select('body')\n                        .attr('focusable', 'true')\n                        .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                            switch (e.keyIdentifier) {\n                                case 'Up':\n                                    updateValue(thisElement, data.uuid, data.value+wheelSpeed, wheelSpeed*10)\n                                    break;\n                                case 'Down':\n                                    updateValue(thisElement, data.uuid, data.value-wheelSpeed, wheelSpeed*10)\n                                    break;\n                                case 'U+0008': // delete key (to delete key)\n                                    dataMap.delete(data.uuid);\n                                    setDataMap(new Map(dataMap))\n                                    break;\n                                case 'U+004E': // 'n' key\n                                    addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n                                    break;\n                            }\n                        });\n\n                })\n                .on('mouseover', function(actual, i){\n                    d3.select(this)\n                        .attr('stroke', 'black')\n                        .attr('stroke-width', 3)\n                })\n                .on('wheel', function (wheelInfo, data){\n\n                    d3.select(this).attr('stroke', 'black')\n                    let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n                    updateValue(this, data.uuid, newValue, 0);\n\n                })\n                .on('mouseleave', function (actual, i) {\n                    d3.select(this)\n                        .attr('opacity', 1)\n                        .attr('stroke', null)\n\n                    d3.select('body')\n                        .attr('focusable', 'false')\n                        .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                        if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                            addRandomElementToMap();\n                        }\n                    });\n                })\n                .on('click', function(actual, data){\n                    var response = prompt(\"Change value:\", data.value);\n                    if (response == null || response == \"\") {\n                        alert(\"You cancelled the prompt.\");\n                        return;\n                    }\n                    if(!isNaN(response)){\n\n                        let value = parseFloat(response);\n\n\n                        updateValue(this, data.uuid, value, 1000);\n                        return;\n                    }\n                    alert(\"Something went wrong!\");\n                })\n                .on('dblclick', function(actual, data){\n\n                    let newDataMap = new Map(dataMap);\n                    newDataMap.delete(data.uuid);\n\n// TODO double click does not work yet, probably it's the alert on the event 'click'\n\n                    d3.select(this)\n                        .transition()\n                        .duration(1000)\n                        .attr('x', parseFloat(d3.select(this).attr('x'))+parseFloat(d3.select(this).attr('width'))/2)\n                        .attr('width', 0)\n\n                    setTimeout(() => setDataMap(newDataMap), 1000);\n                    return newDataMap;\n\n\n\n\n                    /*  Not working code to animate delete   */\n\n                    /*\n\n                    // Y axis: scale and draw:\n                    var y = d3.scaleLinear()\n                        .range([0, height])\n                        .domain([d3.max(dataArray, d => d.value), 0])\n                    yAxis.transition()\n                        .duration(1000)\n                        .call(d3.axisLeft(y));\n\n\n\n                    d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n                        .transition()\n                        .duration(1000)\n                        .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n                        .attr('y', (d, i) => y(d.value))\n                        .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n                        .attr('value', d => d.value)\n                        .attr('height', function(d) { return height - y(d.value); })\n                        .style('fill', d => d.color)\n\n\n                    setTimeout(() => setDataMap(oldMap => {\n                        oldMap.delete(data.uuid);\n\n\n                        return new Map(oldMap);\n                    }), 1000) */\n\n                })\n                .call(d3.drag()\n                    .on('start', function dragStarted(){\n                        d3.select(this)\n                            .attr('stroke', 'black');\n                    })\n                    .on('drag', function dragged(event, d){\n\n                        let newX;\n                        // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n                        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\"))/2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n                        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n                        if(event.x < (elementMiddleX)) { // first half\n                            newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                        }\n                        else { // second half\n                            newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                        }\n                        d3.select(this)\n                            .raise()\n                            .attr('x',\n                                newX\n                            )\n                        d3\n                            .select(this)\n                            .raise()\n                            .attr('x', event.x)\n                    })\n                    .on('end', function dragEnded(){\n                        d3.select(this)\n                            .attr('stroke', null);\n                    })\n                )\n            histogram.exit().remove();\n        }\n    }, [dataMap]);\n\n    return (\n        <>\n\n            {/*<svg width={svgWidth} height={svgHeight} ref={containerRef}/>*/}\n\n            <div id=\"histogram\" />\n\n            <div >\n                <button\n                    onClick={() => addRandomElementToMap(500)}>\n                    ciaoo\n                </button>\n                <input\n                    ref={wheel}\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"20\"\n                    step=\"1\"\n                    id=\"wheelController\"\n                    defaultValue={wheelSpeed}\n                    onChange={() => {\n                        setWheelSpeed(parseInt(wheel.current.value))\n                    }}/>\n                <div>\n                    {wheelSpeed}</div>\n            </div>\n\n        </>\n    );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}