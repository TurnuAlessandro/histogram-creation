{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction element(uuid) {\n  return {\n    uuid,\n    value: Math.floor(Math.random() * 100 + 20),\n    // +20 per evitare la presenza di zeri\n    color: getRandomColor()\n  };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  const [dataMap, setData] = useState(new Map());\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let initialMap = new Map(dataMap);\n    let id = uuidv4();\n    initialMap.set(id, element(id));\n    id = uuidv4();\n    initialMap.set(id, element(id));\n    id = uuidv4();\n    initialMap.set(id, element(id));\n    setData(initialMap);\n  }, []);\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n      let margin = {\n        top: 40,\n        right: 30,\n        bottom: 30,\n        left: 40\n      };\n      let width = 460 - margin.left - margin.right;\n      let height = 460 - margin.top - margin.bottom;\n      let svg = d3.select(\"#histogram\").append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.bottom + margin.top).append('g').attr('transform');\n      const histogram = d3.select('svg').selectAll('rect').data(data); // X axis: scale and draw\n\n      var x = d3.scaleLinear().domain([0, 1000]).range([0, svgWidth]);\n      d3.select('svg').call(d3.axisBottom(x));\n      histogram.enter().append('rect').merge(histogram).attr('x', (_, i) => i * svgWidth / (data.length + 1) + 100 / data.length).attr('transform', d => `translate(0,${svgHeight - d.value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n      .attr(\"width\", (svgWidth - 100) / (data.length + 1)).attr(\"height\", d => d.value * 300 / svgHeight).attr('fill', d => d.color).on('mouseenter', function (actual, i) {\n        d3.select(this).attr('opacity', 0.6);\n      }).on('mouseleave', function (actual, i) {\n        d3.select(this).attr('opacity', 1);\n      }).on('click', function (actual, data) {\n        var response = prompt(\"Change value:\", data.value);\n\n        if (response == null || response == \"\") {\n          alert(\"You cancelled the prompt.\");\n          return;\n        }\n\n        if (!isNaN(response)) {\n          let value = parseFloat(response);\n          setTimeout(() => {\n            d3.select(this).transition().duration(transitionDuration).attr('transform', d => `translate(0,${svgHeight - value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n            .attr(\"height\", d => value * 300 / svgHeight);\n          }, 0);\n          setTimeout(() => {\n            setData(oldMap => {\n              let newMap = new Map(oldMap);\n              newMap.set(data.uuid, {\n                uuid: data.uuid,\n                color: data.color,\n                value: value\n              });\n              return newMap;\n            });\n          }, transitionDuration);\n          return;\n        }\n\n        alert(\"Something went wrong!\");\n      }).call(d3.drag().on('start', function dragStarted() {\n        d3.select(this).attr('stroke', 'black');\n      }).on('drag', function dragged(event, d) {\n        let newX; // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n\n        let elementMiddleX = parseFloat(d3.select(this).attr(\"width\")) / 2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n        //TODO aggiustare sfarfallamento\n        // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n\n        if (event.x < elementMiddleX) {\n          // first half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        } else {\n          // second half\n          newX = event.x - parseFloat(d3.select(this).attr(\"width\")) / 2;\n        }\n\n        d3.select(this).raise().attr('x', newX);\n        /*\n        d3\n        .select(this)\n        .raise()\n        .attr('x', event.x)*/\n      }).on('end', function dragEnded() {\n        d3.select(this).attr('stroke', null); //setData(new Map(dataMap))\n      }));\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"histogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setData(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setData(d => {\n            let newMap = new Map(d);\n            let id = uuidv4();\n            newMap.set(id, element(id));\n            return newMap;\n          });\n        },\n        children: \"ciaoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"LQ+asEGH2HedXfQCKNOgXOw2q3U=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","element","uuid","value","Math","floor","random","color","transitionDuration","App","svgWidth","svgHeight","dataMap","setData","Map","containerRef","initialMap","id","set","data","values","Array","isArray","margin","top","right","bottom","left","width","height","svg","select","append","attr","histogram","selectAll","x","scaleLinear","domain","range","call","axisBottom","enter","merge","_","i","length","d","on","actual","response","prompt","alert","isNaN","parseFloat","setTimeout","transition","duration","oldMap","newMap","drag","dragStarted","dragged","event","newX","elementMiddleX","raise","dragEnded","exit","remove"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,eAAlC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACd,SAAO;AACHA,IAAAA,IADG;AAEHC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,EAAjC,CAFJ;AAE0C;AAC7CC,IAAAA,KAAK,EAAET,cAAc;AAHlB,GAAP;AAKP;;AAED,MAAMU,kBAAkB,GAAG,IAA3B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAMC,SAAS,GAAG,GAAlB;AAEA,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBnB,QAAQ,CAAC,IAAIoB,GAAJ,EAAD,CAAnC;AACA,QAAMC,YAAY,GAAGtB,MAAM,CAAC,IAAD,CAA3B;AAGEG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,UAAU,GAAG,IAAIF,GAAJ,CAAQF,OAAR,CAAjB;AACA,QAAIK,EAAE,GAAGjB,MAAM,EAAf;AACAgB,IAAAA,UAAU,CAACE,GAAX,CAAeD,EAAf,EAAmBhB,OAAO,CAACgB,EAAD,CAA1B;AACAA,IAAAA,EAAE,GAAGjB,MAAM,EAAX;AACAgB,IAAAA,UAAU,CAACE,GAAX,CAAeD,EAAf,EAAmBhB,OAAO,CAACgB,EAAD,CAA1B;AACAA,IAAAA,EAAE,GAAGjB,MAAM,EAAX;AACAgB,IAAAA,UAAU,CAACE,GAAX,CAAeD,EAAf,EAAmBhB,OAAO,CAACgB,EAAD,CAA1B;AACAJ,IAAAA,OAAO,CAACG,UAAD,CAAP;AACH,GATQ,EASN,EATM,CAAT;AAWFrB,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIwB,IAAI,GAAG,CAAC,GAAGP,OAAO,CAACQ,MAAR,EAAJ,CAAX;;AAEA,QAAIC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACrB,UAAII,MAAM,GAAG;AACTC,QAAAA,GAAG,EAAE,EADI;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,MAAM,EAAE,EAHC;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAb;AAMA,UAAIC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KAAvC;AACA,UAAII,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAAvC;AAEA,UAAII,GAAG,GAAGjC,EAAE,CAACkC,MAAH,CAAU,YAAV,EACLC,MADK,CACE,KADF,EAELC,IAFK,CAEA,OAFA,EAESL,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAFtC,EAGLQ,IAHK,CAGA,QAHA,EAGUJ,MAAM,GAAGN,MAAM,CAACG,MAAhB,GAAyBH,MAAM,CAACC,GAH1C,EAILQ,MAJK,CAIE,GAJF,EAKLC,IALK,CAKA,WALA,CAAV;AAMF,YAAMC,SAAS,GAAGrC,EAAE,CAACkC,MAAH,CAAU,KAAV,EAAiBI,SAAjB,CAA2B,MAA3B,EAAmChB,IAAnC,CAAwCA,IAAxC,CAAlB,CAhBuB,CAkBvB;;AACC,UAAIiB,CAAC,GAAGvC,EAAE,CACLwC,WADG,GAEHC,MAFG,CAEI,CAAC,CAAD,EAAI,IAAJ,CAFJ,EAGHC,KAHG,CAGG,CAAC,CAAD,EAAI7B,QAAJ,CAHH,CAAR;AAKCb,MAAAA,EAAE,CAACkC,MAAH,CAAU,KAAV,EACKS,IADL,CACU3C,EAAE,CAAC4C,UAAH,CAAcL,CAAd,CADV;AAIFF,MAAAA,SAAS,CACJQ,KADL,GAEKV,MAFL,CAEY,MAFZ,EAGKW,KAHL,CAGWT,SAHX,EAIKD,IAJL,CAIU,GAJV,EAIe,CAACW,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGnC,QAAJ,IAAcS,IAAI,CAAC2B,MAAL,GAAY,CAA1B,IAAgC,MAAI3B,IAAI,CAAC2B,MAJlE,EAKKb,IALL,CAKU,WALV,EAKuBc,CAAC,IAAK,eAAcpC,SAAS,GAAEoC,CAAC,CAAC5C,KAAF,GAAU,GAAV,GAAgBQ,SAAW,GALjF,EAKqF;AALrF,OAMKsB,IANL,CAMU,OANV,EAMmB,CAACvB,QAAQ,GAAC,GAAV,KAAkBS,IAAI,CAAC2B,MAAL,GAAc,CAAhC,CANnB,EAOKb,IAPL,CAOU,QAPV,EAOoBc,CAAC,IAAIA,CAAC,CAAC5C,KAAF,GAAU,GAAV,GAAgBQ,SAPzC,EAQKsB,IARL,CAQU,MARV,EAQkBc,CAAC,IAAIA,CAAC,CAACxC,KARzB,EASKyC,EATL,CASQ,YATR,EASsB,UAAUC,MAAV,EAAkBJ,CAAlB,EAAqB;AACnChD,QAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKE,IADL,CACU,SADV,EACqB,GADrB;AAEH,OAZL,EAaKe,EAbL,CAaQ,YAbR,EAasB,UAAUC,MAAV,EAAkBJ,CAAlB,EAAqB;AACnChD,QAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKE,IADL,CACU,SADV,EACqB,CADrB;AAEH,OAhBL,EAiBKe,EAjBL,CAiBQ,OAjBR,EAiBiB,UAASC,MAAT,EAAiB9B,IAAjB,EAAsB;AAC/B,YAAI+B,QAAQ,GAAGC,MAAM,CAAC,eAAD,EAAkBhC,IAAI,CAAChB,KAAvB,CAArB;;AACA,YAAI+C,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,EAApC,EAAwC;AACpCE,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACH;;AACD,YAAG,CAACC,KAAK,CAACH,QAAD,CAAT,EAAoB;AAChB,cAAI/C,KAAK,GAAGmD,UAAU,CAACJ,QAAD,CAAtB;AAEAK,UAAAA,UAAU,CAAC,MAAM;AACb1D,YAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKyB,UADL,GAEKC,QAFL,CAEcjD,kBAFd,EAGKyB,IAHL,CAGU,WAHV,EAGuBc,CAAC,IAAK,eAAcpC,SAAS,GAAER,KAAK,GAAG,GAAR,GAAcQ,SAAW,GAH/E,EAGmF;AAHnF,aAIKsB,IAJL,CAIU,QAJV,EAIoBc,CAAC,IAAI5C,KAAK,GAAG,GAAR,GAAcQ,SAJvC;AAKH,WANS,EAMP,CANO,CAAV;AAOA4C,UAAAA,UAAU,CAAC,MAAM;AACb1C,YAAAA,OAAO,CAAC6C,MAAM,IAAI;AACd,kBAAIC,MAAM,GAAG,IAAI7C,GAAJ,CAAQ4C,MAAR,CAAb;AACAC,cAAAA,MAAM,CAACzC,GAAP,CAAWC,IAAI,CAACjB,IAAhB,EAAsB;AAClBA,gBAAAA,IAAI,EAAEiB,IAAI,CAACjB,IADO;AAElBK,gBAAAA,KAAK,EAAEY,IAAI,CAACZ,KAFM;AAGlBJ,gBAAAA,KAAK,EAAEA;AAHW,eAAtB;AAKA,qBAAOwD,MAAP;AACH,aARM,CAAP;AASH,WAVS,EAUPnD,kBAVO,CAAV;AAWA;AACH;;AACD4C,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,OA/CL,EAgDKZ,IAhDL,CAgDU3C,EAAE,CAAC+D,IAAH,GACGZ,EADH,CACM,OADN,EACe,SAASa,WAAT,GAAsB;AAC/BhE,QAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKE,IADL,CACU,QADV,EACoB,OADpB;AAEH,OAJH,EAKGe,EALH,CAKM,MALN,EAKc,SAASc,OAAT,CAAiBC,KAAjB,EAAwBhB,CAAxB,EAA0B;AAElC,YAAIiB,IAAJ,CAFkC,CAGlC;;AACA,YAAIC,cAAc,GAAGX,UAAU,CAACzD,EAAE,CAACkC,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,OAArB,CAAD,CAAV,GAA0C,CAA1C,GAA8CqB,UAAU,CAACzD,EAAE,CAACkC,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,GAArB,CAAD,CAA7E,CAJkC,CAIwE;AAChI;AACsB;;AACA,YAAG8B,KAAK,CAAC3B,CAAN,GAAW6B,cAAd,EAA+B;AAAE;AAC7BD,UAAAA,IAAI,GAAGD,KAAK,CAAC3B,CAAN,GAAUkB,UAAU,CAACzD,EAAE,CAACkC,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,OAArB,CAAD,CAAV,GAA0C,CAA3D;AACH,SAFD,MAGK;AAAE;AACH+B,UAAAA,IAAI,GAAGD,KAAK,CAAC3B,CAAN,GAAUkB,UAAU,CAACzD,EAAE,CAACkC,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,OAArB,CAAD,CAAV,GAA0C,CAA3D;AACH;;AACDpC,QAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKmC,KADL,GAEKjC,IAFL,CAEU,GAFV,EAGQ+B,IAHR;AAIK;AAC3B;AACA;AACA;AACA;AAKmB,OA/BH,EAgCGhB,EAhCH,CAgCM,KAhCN,EAgCa,SAASmB,SAAT,GAAoB;AAE3BtE,QAAAA,EAAE,CAACkC,MAAH,CAAU,IAAV,EACKE,IADL,CACU,QADV,EACoB,IADpB,EAF2B,CAM3B;AACH,OAvCH,CAhDV;AA0FAC,MAAAA,SAAS,CAACkC,IAAV,GAAiBC,MAAjB;AACD;AACF,GA3Hc,EA2HZ,CAACzD,OAAD,CA3HY,CAAf;AA6HA,sBACI;AAAA,4BAEE;AAAK,MAAA,KAAK,EAAEF,QAAZ;AAAsB,MAAA,MAAM,EAAEC,SAA9B;AAAyC,MAAA,GAAG,EAAEI;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,8BACI;AACI,QAAA,OAAO,EAAE,MAAM;AACXF,UAAAA,OAAO,CAACkC,CAAC,IAAI;AACT,gBAAIY,MAAM,GAAG,IAAI7C,GAAJ,CAAQiC,CAAR,CAAb;AACA,gBAAI9B,EAAE,GAAGjB,MAAM,EAAf;AACA2D,YAAAA,MAAM,CAACzC,GAAP,CAAWD,EAAX,EAAehB,OAAO,CAACgB,EAAD,CAAtB;AACA,mBAAO0C,MAAP;AACH,WALM,CAAP;AAMH,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AACI,QAAA,OAAO,EAAE,MAAM;AACX9C,UAAAA,OAAO,CAACkC,CAAC,IAAI;AACT,gBAAIY,MAAM,GAAG,IAAI7C,GAAJ,CAAQiC,CAAR,CAAb;AACA,gBAAI9B,EAAE,GAAGjB,MAAM,EAAf;AACA2D,YAAAA,MAAM,CAACzC,GAAP,CAAWD,EAAX,EAAehB,OAAO,CAACgB,EAAD,CAAtB;AACA,mBAAO0C,MAAP;AACH,WALM,CAAP;AAMH,SARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADJ;AAkCD;;GAlLQlD,G;;KAAAA,G;AAkLR;AAED,eAAeA,GAAf","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction element(uuid){\n        return {\n            uuid,\n            value: Math.floor(Math.random() * 100 + 20), // +20 per evitare la presenza di zeri\n            color: getRandomColor()\n        };\n}\n\nconst transitionDuration = 1000;\n\nfunction App() {\n  const svgWidth = 1000;\n  const svgHeight = 300;\n\n  const [dataMap, setData] = useState(new Map());\n  const containerRef = useRef(null);\n\n\n    useEffect(() => {\n        let initialMap = new Map(dataMap);\n        let id = uuidv4();\n        initialMap.set(id, element(id));\n        id = uuidv4();\n        initialMap.set(id, element(id));\n        id = uuidv4();\n        initialMap.set(id, element(id));\n        setData(initialMap);\n    }, []);\n\n  useLayoutEffect(() => {\n    let data = [...dataMap.values()];\n\n    if (Array.isArray(data)) {\n        let margin = {\n            top: 40,\n            right: 30,\n            bottom: 30,\n            left: 40\n        };\n        let width = 460 - margin.left - margin.right;\n        let height = 460 - margin.top - margin.bottom;\n\n        let svg = d3.select(\"#histogram\")\n            .append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.bottom + margin.top)\n            .append('g')\n            .attr('transform', )\n      const histogram = d3.select('svg').selectAll('rect').data(data);\n\n      // X axis: scale and draw\n       var x = d3\n           .scaleLinear()\n           .domain([0, 1000])\n           .range([0, svgWidth])\n\n        d3.select('svg')\n            .call(d3.axisBottom(x))\n\n\n      histogram\n          .enter()\n          .append('rect')\n          .merge(histogram)\n          .attr('x', (_, i) => i * svgWidth/(data.length+1) + (100/data.length))\n          .attr('transform', d => `translate(0,${svgHeight-(d.value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n          .attr(\"width\", (svgWidth-100) / (data.length + 1))\n          .attr(\"height\", d => d.value * 300 / svgHeight)\n          .attr('fill', d => d.color)\n          .on('mouseenter', function (actual, i) {\n              d3.select(this)\n                  .attr('opacity', 0.6)\n          })\n          .on('mouseleave', function (actual, i) {\n              d3.select(this)\n                  .attr('opacity', 1)\n          })\n          .on('click', function(actual, data){\n              var response = prompt(\"Change value:\", data.value);\n              if (response == null || response == \"\") {\n                  alert(\"You cancelled the prompt.\");\n                  return;\n              }\n              if(!isNaN(response)){\n                  let value = parseFloat(response);\n\n                  setTimeout(() => {\n                      d3.select(this)\n                          .transition()\n                          .duration(transitionDuration)\n                          .attr('transform', d => `translate(0,${svgHeight-(value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n                          .attr(\"height\", d => value * 300 / svgHeight);\n                  }, 0);\n                  setTimeout(() => {\n                      setData(oldMap => {\n                          let newMap = new Map(oldMap);\n                          newMap.set(data.uuid, {\n                              uuid: data.uuid,\n                              color: data.color,\n                              value: value\n                          })\n                          return newMap;\n                      })\n                  }, transitionDuration);\n                  return;\n              }\n              alert(\"Something went wrong!\");\n          })\n          .call(d3.drag()\n                  .on('start', function dragStarted(){\n                      d3.select(this)\n                          .attr('stroke', 'black');\n                  })\n                  .on('drag', function dragged(event, d){\n\n                      let newX;\n                      // we need to understand where the mouse is, if it is on the first half of the element or on the second one\n                      let elementMiddleX = parseFloat(d3.select(this).attr(\"width\"))/2 + parseFloat(d3.select(this).attr(\"x\")); // middle x of the element dragged\n//TODO aggiustare sfarfallamento\n                      // TODO consulta http://bl.ocks.org/AlessandraSozzi/9aff786dd04515d6b028\n                      if(event.x < (elementMiddleX)) { // first half\n                          newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                      }\n                      else { // second half\n                          newX = event.x - parseFloat(d3.select(this).attr(\"width\"))/2;\n                      }\n                      d3.select(this)\n                          .raise()\n                          .attr('x',\n                              newX\n                          )/*\n                      d3\n                          .select(this)\n                          .raise()\n                          .attr('x', event.x)*/\n\n\n\n\n                  })\n                  .on('end', function dragEnded(){\n\n                      d3.select(this)\n                          .attr('stroke', null);\n\n\n                      //setData(new Map(dataMap))\n                  })\n\n          )\n      histogram.exit().remove();\n    }\n  }, [dataMap]);\n\n  return (\n      <>\n\n        <svg width={svgWidth} height={svgHeight} ref={containerRef} />\n\n        <div id=\"histogram\" />\n\n        <div>\n            <button\n                onClick={() => {\n                    setData(d => {\n                        let newMap = new Map(d);\n                        let id = uuidv4();\n                        newMap.set(id, element(id));\n                        return newMap;\n                    })\n                }}>\n                ciaoo\n            </button>\n            <button\n                onClick={() => {\n                    setData(d => {\n                        let newMap = new Map(d);\n                        let id = uuidv4();\n                        newMap.set(id, element(id));\n                        return newMap;\n                    })\n                }}>\n                ciaoo\n            </button>\n        </div>\n\n      </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}