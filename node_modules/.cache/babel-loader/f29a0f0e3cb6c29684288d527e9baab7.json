{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/ModifiedHistogram.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getWidth, getHeight } from \"./utils/pageDimensions\";\nimport encode from './utils/encode';\nimport getCorrectTextColor from \"./utils/getCorrectTextColor\";\nimport getImage from \"./img/getImage\";\nimport dataFile from './righe.csv';\nimport { csv } from 'd3-request';\nimport element from \"./histogramElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst transitionDuration = 100;\n\nfunction ModifiedHistogram({\n  title\n}) {\n  _s();\n\n  var _dataMap$get, _dataMap$get2, _dataMap$get3, _dataMap$get4, _dataMap$get5, _dataMap$get6;\n\n  let [dataArray, setDataArray] = useState([]);\n  let wheel = useRef(null);\n  let [wheelSpeed, setWheelSpeed] = useState(5);\n  let addRectBtn = useRef(null);\n  let addRandomRectBtn = useRef(null);\n  let [svgWidth, setSvgWidth] = useState();\n  let [svgHeight, setSvgHeight] = useState(550);\n  let widthInput = useRef(null);\n  let [currentElement, setCurrentElement] = useState(null);\n  let margin = {\n    top: 40,\n    right: 20,\n    bottom: 70,\n    left: 40\n  };\n  let width = svgWidth - margin.left - margin.right;\n  let height = svgHeight - margin.top - margin.bottom;\n  let maxYvalue = d3.max(dataArray, d => d.value);\n  useEffect(() => {\n    // On Component Mount\n    function resizeHistogramContainer() {\n      var _document$getElementB;\n\n      setSvgWidth((_document$getElementB = document.getElementById('histogram-container')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.clientWidth);\n    }\n\n    window.addEventListener('resize', resizeHistogramContainer);\n    return () => {\n      // On Component Dismount\n      window.removeEventListener('resize', resizeHistogramContainer);\n    };\n  }, []); // Adds an element to the map at the end of the map => adds a rect after the last one\n\n  function addRandomElementToMap(data, transitionDuration) {\n    let id = uuidv4();\n    dataMap.set(id, element(id, data === null || data === void 0 ? void 0 : data.value, data === null || data === void 0 ? void 0 : data.color));\n    /*\n             let newX = d3\n                .scaleBand()\n                .rangeRound([0, width])\n                .padding(0)\n                .domain([...dataMap.values()].map(x => x.name));\n              // scale Y axis with transition\n            d3.select('#yAxis')\n                .transition()\n                .duration(transitionDuration)\n                .call(d3.axisBottom(newX));*/\n    // needed to scale all the other rects\n\n    let newY = d3.scaleLinear().range([0, height]).domain([d3.max([...dataMap.values()], d => d.value), 0]); // scale Y axis with transition\n\n    d3.select('#yAxis').transition().duration(transitionDuration).call(d3.axisLeft(newY)); // movement of the other rects\n\n    d3.select('svg').selectAll('rect').transition().duration(transitionDuration).attr('x', (_, i) => i * (width / (dataArray.length + 1))).attr('y', (d, i) => newY(d.value)).attr('width', width / (dataArray.length + 1 > 0 ? dataArray.length + 1 : 1)).attr('value', d => d.value).attr('height', function (d) {\n      return height - newY(d.value);\n    }); // new rect creation, it must be put after the last rect, with overflow on the x axis\n\n    let newRect = d3.select('svg').select('g').append('rect').attr('x', (dataMap.size - 1) * (width / dataArray.length)) //(dataMap.size)*(width / (dataArray.length)))\n    .attr('y', newY(dataMap.get(id).value)).attr('width', width / (dataArray.length > 0 ? dataArray.length : 1)).attr('value', dataMap.get(id).value).attr('height', height - newY(dataMap.get(id).value)).attr('fill', dataMap.get(id).color); // move the new rect on its right position\n\n    newRect.transition().duration(transitionDuration).attr('x', (dataMap.size - 1) * (width / (dataArray.length + 1))).attr('width', width / (dataArray.length + 1 > 0 ? dataArray.length + 1 : 1));\n    setTimeout(() => setDataArray(new Map(dataMap)), transitionDuration);\n  }\n\n  function addRandomElementToMapAfterXuuid(xUuid) {\n    let dataMapEntries = dataMap.entries();\n    let newMap = new Map();\n    let newElementUuid = uuidv4();\n    [...dataMapEntries].forEach(([k, v]) => {\n      newMap.set(k, v);\n\n      if (k == xUuid) {\n        newMap.set(newElementUuid, element(newElementUuid));\n      }\n    });\n    setDataArray(newMap);\n  } // onMount: used to initialize the map\n\n\n  useEffect(() => {\n    var _document$getElementB2;\n\n    /*\n    let initialMap = new Map();\n    let id = 0;\n    d3.range(Math.floor(Math.random()*30)).map(x => {\n    id = uuidv4();\n    initialMap.set(id, element(id));\n    })\n    setDataArray(initialMap);*/\n    setSvgWidth(parseInt((_document$getElementB2 = document.getElementById('histogram-container')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.clientWidth)); // if i put it in the default value of useState, histogram-container is not loaded yet, so it returns 0\n  }, []);\n  /*\n      // X axis: scale and draw:\n      var x = d3.scaleLinear()\n          .domain([0, 1000]) // axis y range\n          .range([0, width]);//data.lenght]); // axis x range*/\n\n  let x = d3.scaleBand().rangeRound([0, width]).padding(0.05).domain(dataArray.map(x => x.name)); // Y axis: scale and draw:\n\n  let y = d3.scaleLinear().range([0, height]).domain([d3.max(dataArray, d => d.value), 0]).domain([d3.max(dataArray, d => d.value), 0]);\n  d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n    // manage  n (or N) keys\n    if (e.keyIdentifier == 'U+004E') {\n      // 'n' key\n      addRandomElementToMap();\n    }\n  });\n  /* Function to update a value of a specified rect (d3 element)\n  * (with transitions to other rects too) */\n\n  function updateValue(uuid, newValue, transitionTime) {\n    let d3element = d3.select(`#rect${encode(uuid)}`);\n    let oldValue = dataMap.get(uuid).value;\n    if (newValue <= 0.5) newValue = 0.5;\n\n    if (newValue > maxYvalue) {\n      // here the user changes the value with a value grater then the max value\n      // update y axis value (scale domain)\n      y.domain([newValue, 0]);\n      d3.select('#yAxis').transition().duration(transitionTime).call(d3.axisLeft(y));\n    } else if (oldValue == maxYvalue) {\n      // user decreases the value of the maximum rect\n      let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n      let demainValue = 0;\n      /* if the user decides to decrease the maximum rect there are 2 scenarios:\n              1) newValue for the (old) maximum rect is less then the second maximum value\n                  -> the (old) maximum rect is no longer the maximum rect\n              2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                  -> the (old) maximum rect is still the maximum rect */\n\n      if (newValue < secondMaxYvalue) {\n        // scenario 1)\n        demainValue = secondMaxYvalue;\n      } else {\n        // scenario 2)\n        demainValue = newValue;\n      } // update y axis value (scale domain)\n\n\n      y.domain([demainValue, 0]);\n      d3.select('#yAxis').transition().duration(transitionTime).call(d3.axisLeft(y));\n    } // update each rect\n\n\n    d3.select('svg').selectAll('rect').transition().duration(transitionTime).attr('y', d => y(d.value)).attr('height', d => height - y(d.value)); // update rect modified with new height\n\n    d3element.transition().duration(transitionTime).attr('y', y(newValue)).attr('height', height - y(newValue)); // data update after all transition finish\n\n    setTimeout(() => {\n      setDataArray(oldMap => {\n        let newMap = new Map(oldMap);\n        let elementToModify = oldMap.get(uuid);\n        elementToModify.value = newValue;\n        newMap.set(uuid, elementToModify);\n        return newMap;\n      });\n    }, transitionTime);\n  }\n\n  function highlightRect(uuid) {\n    d3.selectAll('rect').attr('stroke-width', 0).attr('stroke', null).style('opacity', 1).on('mouseover', function (actual, data) {\n      if (currentElement == data.uuid) return;\n      d3.select(this).attr('opacity', 0.6).attr('stroke', 'black').attr('stroke-width', 1);\n    }).on('mouseleave', function (actual, data) {\n      if (!(currentElement != null && data.uuid == currentElement)) d3.select(this).attr('opacity', 1).attr('stroke', null);\n    });\n    if (uuid == null) return;\n    d3.select(`#rect${encode(uuid)}`).attr('stroke', 'black').attr('stroke-width', '3px').on('mouseleave', null).on('mouseover', null);\n  }\n\n  function updateDataMap(newDataMap, transitionDuration = 400) {\n    const t = d3.select('#rectsContainer').transition().duration(transitionDuration); // update y axis value (scale domain)\n\n    y.domain([d3.max([...newDataMap.values()].map(x => x.value)), 0]);\n    d3.select('#yAxis').transition().duration(transitionDuration).call(d3.axisLeft(y));\n    console.log('newDataMap.values()', [...newDataMap.values()]);\n    let newX = x.domain([...newDataMap.values()].map(x => x.name));\n    d3.select('#rectsContainer').selectAll('rect') // .data([...newDataMap.values()])\n    .data(dataArray).transition(t) //.merge([...newDataMap.values()])\n    .delay((d, i) => i * 20).attr('x', d => x(d.name)).attr('width', x.bandwidth()).attr('y', (d, i) => y(d.value)).attr('height', d => height - y(d.value)).style('fill', d => d.color);\n    /*\n            d3\n                .select('#rectsContainer')\n                .append('rect')\n    \n    \n                .attr('width', x.bandwidth()/2)\n                .attr('y', 10)\n                .attr('height', 40)\n                .style('fill', 'yellow')\n                .transition().duration(transitionDuration)\n                .attr('width', x.bandwidth())\n                .style('fill', 'black')\n    */\n\n    d3.select('#xAxis').transition().duration(transitionDuration).call(d3.axisBottom(x)).selectAll('text').attr('transform', 'translate(-20, 20) rotate(-70)');\n    /*\n            d3\n                .select('#rectsContainer')\n                .append('rect')\n               // .transition(t)\n                //.delay((d, i) => i*20)\n                .attr('x', d => x(d.name))\n                 .attr('width', x.bandwidth())\n                .attr('y', (d, i) => y(d.value))\n                .attr('height', d => height - y(d.value))\n    */\n\n    setTimeout(() => {\n      setDataArray(newDataMap);\n    }, transitionDuration);\n  }\n\n  useEffect(function () {\n    csv(dataFile, function (error, data) {\n      if (error) {\n        console.log(error);\n        return;\n      }\n\n      console.log(data instanceof Array, data.length);\n      let newMap = data.map(d => {\n        let id = uuidv4();\n        return [id, element(id, d.value, d.color, d.name)];\n      });\n      setDataArray(new Map(newMap));\n    });\n  }, []);\n  useLayoutEffect(() => {\n    d3.select('#histogram svg').remove();\n    let svg = d3.select(\"#histogram\").append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.bottom + margin.top).append('g').attr('transform', `translate(${margin.left},${margin.top})`).attr('id', 'rectsContainer');\n    var xAxis = svg.append(\"g\").attr('id', 'xAxis').attr(\"transform\", \"translate(0,\" + height + \")\");\n    let yAxis = svg.append(\"g\").attr('id', 'yAxis');\n    xAxis.call(d3.axisBottom(x)).selectAll('text').attr('transform', 'translate(-20, 20) rotate(-70)');\n    yAxis.call(d3.axisLeft(y));\n    let histogram = d3.select('#rectsContainer').selectAll('rect').data(dataArray).enter().append('rect').attr('x', (d, i) => x(d.name)).attr('y', (d, i) => y(d.value)).attr('id', d => `rect${encode(d.uuid)}`).attr('width', x.bandwidth()).attr('height', function (d) {\n      return height - y(d.value);\n    }).style('fill', d => d.color).on('mouseenter', function (event, data) {\n      d3.select('body').attr('focusable', 'true').on('keydown', function (e) {\n        // manage up, down and canc and n (or N) keys\n        switch (e.keyIdentifier) {\n          case 'Up':\n            updateValue(data.uuid, data.value + wheelSpeed, wheelSpeed * 10);\n            break;\n\n          case 'Down':\n            updateValue(data.uuid, data.value - wheelSpeed, wheelSpeed * 10);\n            break;\n\n          case 'U+0008':\n            // delete key (to delete key)\n\n            /* dataMap.delete(data.uuid);\n             setDataArray(new Map(dataMap))*/\n            break;\n\n          case 'U+004E':\n            // 'n' key\n            addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n\n            break;\n        }\n      });\n    }).on('mouseleave', function (actual, i) {\n      if (!(currentElement != null && i.uuid == currentElement)) d3.select(this).attr('opacity', 1).attr('stroke', null);\n      d3.select('body').attr('focusable', 'false').on('keydown', function (e) {\n        // manage up, down and canc and n (or N) keys\n        if (e.keyIdentifier == 'U+004E') {\n          // 'n' key\n          addRandomElementToMap();\n        }\n      });\n    }).on('click', function (actual, data) {\n      setCurrentElement(old => {\n        return data.uuid == old ? null : data.uuid;\n      });\n    }).on('dblclick', function (actual, data) {\n      return; // TODO delete\n\n      let newDataMap = new Map(dataMap);\n      newDataMap.delete(data.uuid);\n      d3.select(this).transition().duration(1000).attr('x', parseFloat(d3.select(this).attr('x')) + parseFloat(d3.select(this).attr('width')) / 2).attr('width', 0);\n      setTimeout(() => setDataArray(newDataMap), 1000);\n      return newDataMap;\n      /*  Not working code to animate delete   */\n\n      /*\n       // Y axis: scale and draw:\n      var y = d3.scaleLinear()\n          .range([0, height])\n          .domain([d3.max(dataArray, d => d.value), 0])\n      yAxis.transition()\n          .duration(1000)\n          .call(d3.axisLeft(y));\n         d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n          .transition()\n          .duration(1000)\n          .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n          .attr('y', (d, i) => y(d.value))\n          .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n          .attr('value', d => d.value)\n          .attr('height', function(d) { return height - y(d.value); })\n          .style('fill', d => d.color)\n        setTimeout(() => setDataArray(oldMap => {\n          oldMap.delete(data.uuid);\n            return new Map(oldMap);\n      }), 1000) */\n    }).on('wheel', function (wheelInfo, data) {\n      console.log('ehrrl');\n      setCurrentElement(old => data.uuid);\n      let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n      updateValue(data.uuid, newValue, 0);\n    }).append('title').html(d => `${d.name}: ${d.value}`);\n    histogram.exit().remove();\n  }, [dataMap, svgWidth]);\n  useEffect(() => highlightRect(currentElement));\n  const titleBtn = title ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-outline-secondary disabled mr-3\",\n    style: {\n      borderRadius: 0,\n      borderRight: 0,\n      borderLeft: 0\n    },\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 30\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [titleBtn, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary mr-3\",\n            ref: addRectBtn,\n            onClick: () => {\n              addRandomElementToMap({\n                value: 900\n              }, 500);\n              addRectBtn.current.disabled = true;\n              setTimeout(() => addRectBtn.current.disabled = false, 500);\n            },\n            children: \"Add Rect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary mr-3\",\n            ref: addRandomRectBtn,\n            onClick: () => {\n              addRandomElementToMap(null, 500);\n              addRandomRectBtn.current.disabled = true;\n              setTimeout(() => addRandomRectBtn.current.disabled = false, 500);\n            },\n            children: \"Add Random Rect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary mr-3\",\n            onClick: () => {\n              let dataArr = [...dataMap.values()].sort((x, y) => x.value > y.value);\n              let mapElement = dataArr.map(x => [x.uuid, x]);\n              updateDataMap(new Map(mapElement), 1000);\n            },\n            children: \"Add Random Rect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-8 p-0\",\n          id: \"histogram-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"histogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-4 p-0 container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: currentElement ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              style: {\n                paddingTop: 5,\n                border: `1px solid black`,\n                borderRadius: 15,\n                backgroundColor: (_dataMap$get = dataMap.get(currentElement)) === null || _dataMap$get === void 0 ? void 0 : _dataMap$get.color,\n                color: getCorrectTextColor((_dataMap$get2 = dataMap.get(currentElement)) === null || _dataMap$get2 === void 0 ? void 0 : _dataMap$get2.color)\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 16\n                },\n                children: \" Current Element:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container-fluid p-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-9\",\n                    children: (_dataMap$get3 = dataMap.get(currentElement)) === null || _dataMap$get3 === void 0 ? void 0 : _dataMap$get3.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        border: `1px solid ${getCorrectTextColor((_dataMap$get4 = dataMap.get(currentElement)) === null || _dataMap$get4 === void 0 ? void 0 : _dataMap$get4.color)}`,\n                        borderRadius: '3px',\n                        width: '30px',\n                        float: 'right'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: getImage(getCorrectTextColor((_dataMap$get5 = dataMap.get(currentElement)) === null || _dataMap$get5 === void 0 ? void 0 : _dataMap$get5.color) == 'white' ? 'whitePencil' : 'blackPencil'),\n                        className: \"m-1\",\n                        width: 20,\n                        height: 20\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 626,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"my-2\",\n                style: {\n                  backgroundColor: getCorrectTextColor((_dataMap$get6 = dataMap.get(currentElement)) === null || _dataMap$get6 === void 0 ? void 0 : _dataMap$get6.color)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 33\n            }, this) : 'not selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: wheel,\n              type: \"range\",\n              min: \"1\",\n              max: \"20\",\n              step: \"1\",\n              defaultValue: wheelSpeed,\n              onChange: () => {\n                setWheelSpeed(parseInt(wheel.current.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 29\n            }, this), wheelSpeed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"customRange1\",\n                className: \"form-label row\",\n                children: \"Example range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                className: \"form-range\",\n                id: \"customRange1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#exampleModal\",\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal fade bd-example-modal-lg\",\n      id: \"exampleModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-dialog modal-lg modal-dialog-centered\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"modal-title\",\n              id: \"exampleModalLabel\",\n              children: \"Modal title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-body\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-secondary\",\n              \"data-dismiss\": \"modal\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModifiedHistogram, \"Jp3gIN0Xq7fcE0iUC6F/w+FOQ20=\");\n\n_c = ModifiedHistogram;\n;\nexport default ModifiedHistogram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifiedHistogram\");","map":{"version":3,"sources":["/Users/alessandroturnu/Documents/GitHub/histogram-creation/src/ModifiedHistogram.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","d3","getRandomColor","v4","uuidv4","getWidth","getHeight","encode","getCorrectTextColor","getImage","dataFile","csv","element","transitionDuration","ModifiedHistogram","title","dataArray","setDataArray","wheel","wheelSpeed","setWheelSpeed","addRectBtn","addRandomRectBtn","svgWidth","setSvgWidth","svgHeight","setSvgHeight","widthInput","currentElement","setCurrentElement","margin","top","right","bottom","left","width","height","maxYvalue","max","d","value","resizeHistogramContainer","document","getElementById","clientWidth","window","addEventListener","removeEventListener","addRandomElementToMap","data","id","dataMap","set","color","newY","scaleLinear","range","domain","values","select","transition","duration","call","axisLeft","selectAll","attr","_","i","length","newRect","append","size","get","setTimeout","Map","addRandomElementToMapAfterXuuid","xUuid","dataMapEntries","entries","newMap","newElementUuid","forEach","k","v","parseInt","x","scaleBand","rangeRound","padding","map","name","y","on","e","keyIdentifier","updateValue","uuid","newValue","transitionTime","d3element","oldValue","secondMaxYvalue","filter","demainValue","oldMap","elementToModify","highlightRect","style","actual","updateDataMap","newDataMap","t","console","log","newX","delay","bandwidth","axisBottom","error","Array","remove","svg","xAxis","yAxis","histogram","enter","event","old","delete","parseFloat","wheelInfo","deltaY","html","exit","titleBtn","borderRadius","borderRight","borderLeft","current","disabled","dataArr","sort","mapElement","paddingTop","border","backgroundColor","fontSize","float"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,eAAlC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,wBAApC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,kBAAkB,GAAG,GAA3B;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAsC;AAAA;;AAAA;;AAClC,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIoB,KAAK,GAAGrB,MAAM,CAAC,IAAD,CAAlB;AACA,MAAI,CAACsB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIuB,UAAU,GAAGxB,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIyB,gBAAgB,GAAGzB,MAAM,CAAC,IAAD,CAA7B;AACA,MAAI,CAAC0B,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,EAAtC;AACA,MAAI,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,GAAD,CAAxC;AACA,MAAI6B,UAAU,GAAG9B,MAAM,CAAC,IAAD,CAAvB;AACA,MAAI,CAAC+B,cAAD,EAAiBC,iBAAjB,IAAsC/B,QAAQ,CAAC,IAAD,CAAlD;AAEA,MAAIgC,MAAM,GAAG;AACTC,IAAAA,GAAG,EAAE,EADI;AAETC,IAAAA,KAAK,EAAE,EAFE;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,IAAI,EAAE;AAJG,GAAb;AAMA,MAAIC,KAAK,GAAGZ,QAAQ,GAAGO,MAAM,CAACI,IAAlB,GAAyBJ,MAAM,CAACE,KAA5C;AACA,MAAII,MAAM,GAAGX,SAAS,GAAGK,MAAM,CAACC,GAAnB,GAAyBD,MAAM,CAACG,MAA7C;AAEA,MAAII,SAAS,GAAGpC,EAAE,CAACqC,GAAH,CAAOtB,SAAP,EAAkBuB,CAAC,IAAIA,CAAC,CAACC,KAAzB,CAAhB;AAEAxC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,aAASyC,wBAAT,GAAmC;AAAA;;AAC/BjB,MAAAA,WAAW,0BAAEkB,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAF,0DAAE,sBAAgDC,WAAlD,CAAX;AACH;;AACDC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,wBAAlC;AAEA,WAAO,MAAM;AACT;AACAI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCN,wBAArC;AACH,KAHD;AAIH,GAXQ,EAWN,EAXM,CAAT,CAtBkC,CAmClC;;AACA,WAASO,qBAAT,CAA+BC,IAA/B,EAAqCpC,kBAArC,EAAwD;AACpD,QAAIqC,EAAE,GAAG9C,MAAM,EAAf;AACA+C,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAgBtC,OAAO,CAACsC,EAAD,EAAKD,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAET,KAAX,EAAkBS,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEI,KAAxB,CAAvB;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKQ;;AACA,QAAIC,IAAI,GAAGrD,EAAE,CAACsD,WAAH,GACNC,KADM,CACA,CAAC,CAAD,EAAIpB,MAAJ,CADA,EAENqB,MAFM,CAEC,CAACxD,EAAE,CAACqC,GAAH,CAAO,CAAC,GAAGa,OAAO,CAACO,MAAR,EAAJ,CAAP,EAA8BnB,CAAC,IAAIA,CAAC,CAACC,KAArC,CAAD,EAA8C,CAA9C,CAFD,CAAX,CAnBoD,CAuBpD;;AACAvC,IAAAA,EAAE,CAAC0D,MAAH,CAAU,QAAV,EACKC,UADL,GAEKC,QAFL,CAEchD,kBAFd,EAGKiD,IAHL,CAGU7D,EAAE,CAAC8D,QAAH,CAAYT,IAAZ,CAHV,EAxBoD,CA6BpD;;AACArD,IAAAA,EAAE,CAAC0D,MAAH,CAAU,KAAV,EACKK,SADL,CACe,MADf,EAEKJ,UAFL,GAGKC,QAHL,CAGchD,kBAHd,EAIKoD,IAJL,CAIU,GAJV,EAIe,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,IAAEhC,KAAK,IAAInB,SAAS,CAACoD,MAAV,GAAiB,CAArB,CAAP,CAJ1B,EAKKH,IALL,CAKU,GALV,EAKe,CAAC1B,CAAD,EAAI4B,CAAJ,KAAUb,IAAI,CAACf,CAAC,CAACC,KAAH,CAL7B,EAMKyB,IANL,CAMU,OANV,EAMoB9B,KAAD,IAAWnB,SAAS,CAACoD,MAAV,GAAiB,CAAjB,GAAqB,CAArB,GAAyBpD,SAAS,CAACoD,MAAV,GAAiB,CAA1C,GAA8C,CAAzD,CANnB,EAOKH,IAPL,CAOU,OAPV,EAOmB1B,CAAC,IAAIA,CAAC,CAACC,KAP1B,EAQKyB,IARL,CAQU,QARV,EAQoB,UAAS1B,CAAT,EAAY;AAAE,aAAOH,MAAM,GAAGkB,IAAI,CAACf,CAAC,CAACC,KAAH,CAApB;AAAgC,KARlE,EA9BoD,CAwCpD;;AACA,QAAI6B,OAAO,GAAGpE,EAAE,CAAC0D,MAAH,CAAU,KAAV,EACTA,MADS,CACF,GADE,EAETW,MAFS,CAEF,MAFE,EAGTL,IAHS,CAGJ,GAHI,EAGC,CAACd,OAAO,CAACoB,IAAR,GAAa,CAAd,KAAkBpC,KAAK,GAAInB,SAAS,CAACoD,MAArC,CAHD,EAG+C;AAH/C,KAITH,IAJS,CAIJ,GAJI,EAICX,IAAI,CAACH,OAAO,CAACqB,GAAR,CAAYtB,EAAZ,EAAgBV,KAAjB,CAJL,EAKTyB,IALS,CAKJ,OALI,EAKM9B,KAAD,IAAWnB,SAAS,CAACoD,MAAV,GAAmB,CAAnB,GAAuBpD,SAAS,CAACoD,MAAjC,GAA0C,CAArD,CALL,EAMTH,IANS,CAMJ,OANI,EAMKd,OAAO,CAACqB,GAAR,CAAYtB,EAAZ,EAAgBV,KANrB,EAOTyB,IAPS,CAOJ,QAPI,EAOM7B,MAAM,GAAGkB,IAAI,CAACH,OAAO,CAACqB,GAAR,CAAYtB,EAAZ,EAAgBV,KAAjB,CAPnB,EAQTyB,IARS,CAQJ,MARI,EAQId,OAAO,CAACqB,GAAR,CAAYtB,EAAZ,EAAgBG,KARpB,CAAd,CAzCoD,CAmDpD;;AACAgB,IAAAA,OAAO,CAACT,UAAR,GACKC,QADL,CACchD,kBADd,EAEKoD,IAFL,CAEU,GAFV,EAEe,CAACd,OAAO,CAACoB,IAAR,GAAa,CAAd,KAAkBpC,KAAK,IAAInB,SAAS,CAACoD,MAAV,GAAiB,CAArB,CAAvB,CAFf,EAGKH,IAHL,CAGU,OAHV,EAGoB9B,KAAD,IAAWnB,SAAS,CAACoD,MAAV,GAAiB,CAAjB,GAAqB,CAArB,GAAyBpD,SAAS,CAACoD,MAAV,GAAiB,CAA1C,GAA8C,CAAzD,CAHnB;AAQAK,IAAAA,UAAU,CAAC,MAAMxD,YAAY,CAAC,IAAIyD,GAAJ,CAAQvB,OAAR,CAAD,CAAnB,EAAuCtC,kBAAvC,CAAV;AACH;;AAED,WAAS8D,+BAAT,CAAyCC,KAAzC,EAA+C;AAC3C,QAAIC,cAAc,GAAG1B,OAAO,CAAC2B,OAAR,EAArB;AAEA,QAAIC,MAAM,GAAG,IAAIL,GAAJ,EAAb;AAEA,QAAIM,cAAc,GAAG5E,MAAM,EAA3B;AACA,KAAC,GAAGyE,cAAJ,EAAoBI,OAApB,CAA4B,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAAY;AACpCJ,MAAAA,MAAM,CAAC3B,GAAP,CAAW8B,CAAX,EAAcC,CAAd;;AACA,UAAGD,CAAC,IAAIN,KAAR,EAAe;AACXG,QAAAA,MAAM,CAAC3B,GAAP,CAAW4B,cAAX,EAA2BpE,OAAO,CAACoE,cAAD,CAAlC;AACH;AACJ,KALD;AAOA/D,IAAAA,YAAY,CAAC8D,MAAD,CAAZ;AAEH,GAlHiC,CAoHlC;;;AACA/E,EAAAA,SAAS,CAAC,MAAM;AAAA;;AAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AAGQwB,IAAAA,WAAW,CAAC4D,QAAQ,2BAAC1C,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAD,2DAAC,uBAAgDC,WAAjD,CAAT,CAAX,CAVY,CAUwE;AACvF,GAXQ,EAWN,EAXM,CAAT;AAgBA;AACJ;AACA;AACA;AACA;;AAEI,MAAIyC,CAAC,GAAGpF,EAAE,CACLqF,SADG,GAEHC,UAFG,CAEQ,CAAC,CAAD,EAAIpD,KAAJ,CAFR,EAGHqD,OAHG,CAGK,IAHL,EAIH/B,MAJG,CAIIzC,SAAS,CAACyE,GAAV,CAAcJ,CAAC,IAAIA,CAAC,CAACK,IAArB,CAJJ,CAAR,CA3IkC,CAkJlC;;AACA,MAAIC,CAAC,GAAG1F,EAAE,CAACsD,WAAH,GACHC,KADG,CACG,CAAC,CAAD,EAAIpB,MAAJ,CADH,EAEHqB,MAFG,CAEI,CAACxD,EAAE,CAACqC,GAAH,CAAOtB,SAAP,EAAkBuB,CAAC,IAAIA,CAAC,CAACC,KAAzB,CAAD,EAAkC,CAAlC,CAFJ,EAGHiB,MAHG,CAGI,CAACxD,EAAE,CAACqC,GAAH,CAAOtB,SAAP,EAAkBuB,CAAC,IAAIA,CAAC,CAACC,KAAzB,CAAD,EAAkC,CAAlC,CAHJ,CAAR;AAOAvC,EAAAA,EAAE,CAAC0D,MAAH,CAAU,MAAV,EACKM,IADL,CACU,WADV,EACuB,MADvB,EAEK2B,EAFL,CAEQ,SAFR,EAEmB,UAASC,CAAT,EAAY;AAAE;AACzB,QAAGA,CAAC,CAACC,aAAF,IAAmB,QAAtB,EAA+B;AAAE;AAC7B9C,MAAAA,qBAAqB;AACxB;AACJ,GANL;AAQA;AACJ;;AACI,WAAS+C,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,cAArC,EAAoD;AAChD,QAAIC,SAAS,GAAGlG,EAAE,CAAC0D,MAAH,CAAW,QAAOpD,MAAM,CAACyF,IAAD,CAAO,EAA/B,CAAhB;AACA,QAAII,QAAQ,GAAGjD,OAAO,CAACqB,GAAR,CAAYwB,IAAZ,EAAkBxD,KAAjC;AAEA,QAAGyD,QAAQ,IAAI,GAAf,EACIA,QAAQ,GAAG,GAAX;;AAGJ,QAAGA,QAAQ,GAAG5D,SAAd,EAAwB;AAAE;AACtB;AACAsD,MAAAA,CAAC,CAAClC,MAAF,CAAS,CAACwC,QAAD,EAAW,CAAX,CAAT;AACAhG,MAAAA,EAAE,CAAC0D,MAAH,CAAU,QAAV,EACKC,UADL,GAEKC,QAFL,CAEcqC,cAFd,EAGKpC,IAHL,CAGU7D,EAAE,CAAC8D,QAAH,CAAY4B,CAAZ,CAHV;AAKH,KARD,MAQO,IAAGS,QAAQ,IAAI/D,SAAf,EAAyB;AAAE;AAC9B,UAAIgE,eAAe,GAAGpG,EAAE,CAACqC,GAAH,CAAO,CAAC,GAAGtB,SAAJ,EAAesF,MAAf,CAAsBjB,CAAC,IAAIA,CAAC,CAAC7C,KAAF,IAAW4D,QAAtC,CAAP,EAAwD7D,CAAC,IAAIA,CAAC,CAACC,KAA/D,CAAtB;AACA,UAAI+D,WAAW,GAAG,CAAlB;AAEA;AACZ;AACA;AACA;AACA;;AACY,UAAGN,QAAQ,GAAGI,eAAd,EAA8B;AAAE;AAC5BE,QAAAA,WAAW,GAAGF,eAAd;AACH,OAFD,MAEO;AAAE;AACLE,QAAAA,WAAW,GAAGN,QAAd;AACH,OAb2B,CAe5B;;;AACAN,MAAAA,CAAC,CAAClC,MAAF,CAAS,CAAC8C,WAAD,EAAc,CAAd,CAAT;AACAtG,MAAAA,EAAE,CAAC0D,MAAH,CAAU,QAAV,EACKC,UADL,GAEKC,QAFL,CAEcqC,cAFd,EAGKpC,IAHL,CAGU7D,EAAE,CAAC8D,QAAH,CAAY4B,CAAZ,CAHV;AAIH,KArC+C,CAuChD;;;AACA1F,IAAAA,EAAE,CAAC0D,MAAH,CAAU,KAAV,EACKK,SADL,CACe,MADf,EAEKJ,UAFL,GAGKC,QAHL,CAGcqC,cAHd,EAIKjC,IAJL,CAIU,GAJV,EAIe1B,CAAC,IAAIoD,CAAC,CAACpD,CAAC,CAACC,KAAH,CAJrB,EAKKyB,IALL,CAKU,QALV,EAKoB1B,CAAC,IAAIH,MAAM,GAAGuD,CAAC,CAACpD,CAAC,CAACC,KAAH,CALnC,EAxCgD,CA+ChD;;AACA2D,IAAAA,SAAS,CACJvC,UADL,GAEKC,QAFL,CAEcqC,cAFd,EAGKjC,IAHL,CAGU,GAHV,EAGe0B,CAAC,CAACM,QAAD,CAHhB,EAIKhC,IAJL,CAIU,QAJV,EAIoB7B,MAAM,GAAGuD,CAAC,CAACM,QAAD,CAJ9B,EAhDgD,CAsDhD;;AACAxB,IAAAA,UAAU,CAAC,MAAM;AACbxD,MAAAA,YAAY,CAACuF,MAAM,IAAI;AACnB,YAAIzB,MAAM,GAAG,IAAIL,GAAJ,CAAQ8B,MAAR,CAAb;AACA,YAAIC,eAAe,GAAGD,MAAM,CAAChC,GAAP,CAAWwB,IAAX,CAAtB;AACAS,QAAAA,eAAe,CAACjE,KAAhB,GAAwByD,QAAxB;AACAlB,QAAAA,MAAM,CAAC3B,GAAP,CAAW4C,IAAX,EAAiBS,eAAjB;AACA,eAAO1B,MAAP;AACH,OANW,CAAZ;AAOH,KARS,EAQPmB,cARO,CAAV;AASH;;AACD,WAASQ,aAAT,CAAuBV,IAAvB,EAA4B;AAExB/F,IAAAA,EAAE,CAAC+D,SAAH,CAAa,MAAb,EACKC,IADL,CACU,cADV,EAC0B,CAD1B,EAEKA,IAFL,CAEU,QAFV,EAEoB,IAFpB,EAGK0C,KAHL,CAGW,SAHX,EAGsB,CAHtB,EAIKf,EAJL,CAIQ,WAJR,EAIqB,UAASgB,MAAT,EAAiB3D,IAAjB,EAAsB;AACnC,UAAGrB,cAAc,IAAIqB,IAAI,CAAC+C,IAA1B,EACI;AACJ/F,MAAAA,EAAE,CAAC0D,MAAH,CAAU,IAAV,EAEKM,IAFL,CAEU,SAFV,EAEqB,GAFrB,EAGKA,IAHL,CAGU,QAHV,EAGoB,OAHpB,EAIKA,IAJL,CAIU,cAJV,EAI0B,CAJ1B;AAKH,KAZL,EAaK2B,EAbL,CAaQ,YAbR,EAasB,UAASgB,MAAT,EAAiB3D,IAAjB,EAAsB;AACpC,UAAG,EAAErB,cAAc,IAAI,IAAlB,IAA0BqB,IAAI,CAAC+C,IAAL,IAAapE,cAAzC,CAAH,EACI3B,EAAE,CAAC0D,MAAH,CAAU,IAAV,EACKM,IADL,CACU,SADV,EACqB,CADrB,EAEKA,IAFL,CAEU,QAFV,EAEoB,IAFpB;AAGP,KAlBL;AAqBA,QAAG+B,IAAI,IAAI,IAAX,EACI;AAEJ/F,IAAAA,EAAE,CAAC0D,MAAH,CAAW,QAAOpD,MAAM,CAACyF,IAAD,CAAO,EAA/B,EACK/B,IADL,CACU,QADV,EACoB,OADpB,EAEKA,IAFL,CAEU,cAFV,EAE0B,KAF1B,EAGK2B,EAHL,CAGQ,YAHR,EAGsB,IAHtB,EAIKA,EAJL,CAIQ,WAJR,EAIqB,IAJrB;AAKH;;AAGD,WAASiB,aAAT,CAAuBC,UAAvB,EAAmCjG,kBAAkB,GAAG,GAAxD,EAA4D;AACxD,UAAMkG,CAAC,GAAG9G,EAAE,CACP0D,MADK,CACE,iBADF,EAELC,UAFK,GAGLC,QAHK,CAGIhD,kBAHJ,CAAV,CADwD,CAMxD;;AACA8E,IAAAA,CAAC,CAAClC,MAAF,CAAS,CAACxD,EAAE,CAACqC,GAAH,CAAO,CAAC,GAAGwE,UAAU,CAACpD,MAAX,EAAJ,EAAyB+B,GAAzB,CAA6BJ,CAAC,IAAIA,CAAC,CAAC7C,KAApC,CAAP,CAAD,EAAqD,CAArD,CAAT;AAEAvC,IAAAA,EAAE,CAAC0D,MAAH,CAAU,QAAV,EACKC,UADL,GAEKC,QAFL,CAEchD,kBAFd,EAGKiD,IAHL,CAGU7D,EAAE,CAAC8D,QAAH,CAAY4B,CAAZ,CAHV;AAMRqB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,CAAC,GAAGH,UAAU,CAACpD,MAAX,EAAJ,CAAnC;AACQ,QAAIwD,IAAI,GAAG7B,CAAC,CAAC5B,MAAF,CAAS,CAAC,GAAGqD,UAAU,CAACpD,MAAX,EAAJ,EAAyB+B,GAAzB,CAA6BJ,CAAC,IAAIA,CAAC,CAACK,IAApC,CAAT,CAAX;AAIAzF,IAAAA,EAAE,CACG0D,MADL,CACY,iBADZ,EAGKK,SAHL,CAGe,MAHf,EAII;AAJJ,KAKKf,IALL,CAKUjC,SALV,EAMK4C,UANL,CAMgBmD,CANhB,EAOI;AAPJ,KAQKI,KARL,CAQW,CAAC5E,CAAD,EAAI4B,CAAJ,KAAUA,CAAC,GAAC,EARvB,EASKF,IATL,CASU,GATV,EASe1B,CAAC,IAAI8C,CAAC,CAAC9C,CAAC,CAACmD,IAAH,CATrB,EAWKzB,IAXL,CAWU,OAXV,EAWmBoB,CAAC,CAAC+B,SAAF,EAXnB,EAYKnD,IAZL,CAYU,GAZV,EAYe,CAAC1B,CAAD,EAAI4B,CAAJ,KAAUwB,CAAC,CAACpD,CAAC,CAACC,KAAH,CAZ1B,EAaKyB,IAbL,CAaU,QAbV,EAaoB1B,CAAC,IAAIH,MAAM,GAAGuD,CAAC,CAACpD,CAAC,CAACC,KAAH,CAbnC,EAcKmE,KAdL,CAcW,MAdX,EAcmBpE,CAAC,IAAIA,CAAC,CAACc,KAd1B;AAeR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQpD,IAAAA,EAAE,CACG0D,MADL,CACY,QADZ,EAEKC,UAFL,GAGKC,QAHL,CAGchD,kBAHd,EAIKiD,IAJL,CAIU7D,EAAE,CAACoH,UAAH,CAAchC,CAAd,CAJV,EAKKrB,SALL,CAKe,MALf,EAMKC,IANL,CAMU,WANV,EAMuB,gCANvB;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKQQ,IAAAA,UAAU,CAAC,MAAM;AACbxD,MAAAA,YAAY,CAAC6F,UAAD,CAAZ;AACH,KAFS,EAEPjG,kBAFO,CAAV;AAGH;;AAGDb,EAAAA,SAAS,CAAC,YAAU;AAChBW,IAAAA,GAAG,CAACD,QAAD,EAAW,UAAU4G,KAAV,EAAiBrE,IAAjB,EAAuB;AACjC,UAAIqE,KAAJ,EAAW;AACPN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA;AACH;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYhE,IAAI,YAAYsE,KAA5B,EAAmCtE,IAAI,CAACmB,MAAxC;AACA,UAAIW,MAAM,GAAG9B,IAAI,CAACwC,GAAL,CAASlD,CAAC,IAAI;AACvB,YAAIW,EAAE,GAAG9C,MAAM,EAAf;AACA,eAAO,CAAC8C,EAAD,EAAKtC,OAAO,CAACsC,EAAD,EAAKX,CAAC,CAACC,KAAP,EAAcD,CAAC,CAACc,KAAhB,EAAuBd,CAAC,CAACmD,IAAzB,CAAZ,CAAP;AACH,OAHY,CAAb;AAIAzE,MAAAA,YAAY,CAAC,IAAIyD,GAAJ,CAAQK,MAAR,CAAD,CAAZ;AACH,KAXE,CAAH;AAYH,GAbQ,EAaN,EAbM,CAAT;AAeAhF,EAAAA,eAAe,CAAC,MAAM;AAGlBE,IAAAA,EAAE,CAAC0D,MAAH,CAAU,gBAAV,EAA4B6D,MAA5B;AAEA,QAAIC,GAAG,GAAGxH,EAAE,CAAC0D,MAAH,CAAU,YAAV,EACLW,MADK,CACE,KADF,EAELL,IAFK,CAEA,OAFA,EAES9B,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAFtC,EAGLiC,IAHK,CAGA,QAHA,EAGU7B,MAAM,GAAGN,MAAM,CAACG,MAAhB,GAAyBH,MAAM,CAACC,GAH1C,EAILuC,MAJK,CAIE,GAJF,EAKLL,IALK,CAKA,WALA,EAKc,aAAYnC,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACC,GAAI,GALpD,EAMLkC,IANK,CAMA,IANA,EAMM,gBANN,CAAV;AAaA,QAAIyD,KAAK,GAAGD,GAAG,CAACnD,MAAJ,CAAW,GAAX,EACPL,IADO,CACF,IADE,EACI,OADJ,EAEPA,IAFO,CAEF,WAFE,EAEW,iBAAiB7B,MAAjB,GAA0B,GAFrC,CAAZ;AAKA,QAAIuF,KAAK,GAAGF,GAAG,CAACnD,MAAJ,CAAW,GAAX,EACPL,IADO,CACF,IADE,EACI,OADJ,CAAZ;AAGAyD,IAAAA,KAAK,CAAC5D,IAAN,CAAW7D,EAAE,CAACoH,UAAH,CAAchC,CAAd,CAAX,EACKrB,SADL,CACe,MADf,EAEKC,IAFL,CAEU,WAFV,EAEuB,gCAFvB;AAIA0D,IAAAA,KAAK,CAAC7D,IAAN,CAAW7D,EAAE,CAAC8D,QAAH,CAAY4B,CAAZ,CAAX;AAKA,QAAIiC,SAAS,GAAG3H,EAAE,CAAC0D,MAAH,CAAU,iBAAV,EAA6BK,SAA7B,CAAuC,MAAvC,EACXf,IADW,CACNjC,SADM,EAEX6G,KAFW,GAGXvD,MAHW,CAGJ,MAHI,EAIXL,IAJW,CAIN,GAJM,EAID,CAAC1B,CAAD,EAAI4B,CAAJ,KAAUkB,CAAC,CAAC9C,CAAC,CAACmD,IAAH,CAJV,EAKXzB,IALW,CAKN,GALM,EAKD,CAAC1B,CAAD,EAAI4B,CAAJ,KAAUwB,CAAC,CAACpD,CAAC,CAACC,KAAH,CALV,EAMXyB,IANW,CAMN,IANM,EAMA1B,CAAC,IAAK,OAAMhC,MAAM,CAACgC,CAAC,CAACyD,IAAH,CAAS,EAN3B,EAOX/B,IAPW,CAON,OAPM,EAOGoB,CAAC,CAAC+B,SAAF,EAPH,EAQXnD,IARW,CAQN,QARM,EAQI,UAAS1B,CAAT,EAAY;AAAE,aAAOH,MAAM,GAAGuD,CAAC,CAACpD,CAAC,CAACC,KAAH,CAAjB;AAA6B,KAR/C,EASXmE,KATW,CASL,MATK,EASGpE,CAAC,IAAIA,CAAC,CAACc,KATV,EAUXuC,EAVW,CAUR,YAVQ,EAUM,UAAUkC,KAAV,EAAiB7E,IAAjB,EAAuB;AAGrChD,MAAAA,EAAE,CAAC0D,MAAH,CAAU,MAAV,EACKM,IADL,CACU,WADV,EACuB,MADvB,EAEK2B,EAFL,CAEQ,SAFR,EAEmB,UAASC,CAAT,EAAY;AAAE;AACzB,gBAAQA,CAAC,CAACC,aAAV;AACI,eAAK,IAAL;AACIC,YAAAA,WAAW,CAAC9C,IAAI,CAAC+C,IAAN,EAAY/C,IAAI,CAACT,KAAL,GAAWrB,UAAvB,EAAmCA,UAAU,GAAC,EAA9C,CAAX;AACA;;AACJ,eAAK,MAAL;AACI4E,YAAAA,WAAW,CAAC9C,IAAI,CAAC+C,IAAN,EAAY/C,IAAI,CAACT,KAAL,GAAWrB,UAAvB,EAAmCA,UAAU,GAAC,EAA9C,CAAX;AACA;;AACJ,eAAK,QAAL;AAAe;;AACZ;AAC/B;AACgC;;AACJ,eAAK,QAAL;AAAe;AACXwD,YAAAA,+BAA+B,CAAC1B,IAAI,CAAC+C,IAAN,CAA/B,CADJ,CACgD;;AAC5C;AAbR;AAeH,OAlBL;AAoBH,KAjCW,EAkCXJ,EAlCW,CAkCR,YAlCQ,EAkCM,UAAUgB,MAAV,EAAkBzC,CAAlB,EAAqB;AACnC,UAAG,EAAEvC,cAAc,IAAI,IAAlB,IAA0BuC,CAAC,CAAC6B,IAAF,IAAUpE,cAAtC,CAAH,EACI3B,EAAE,CAAC0D,MAAH,CAAU,IAAV,EACKM,IADL,CACU,SADV,EACqB,CADrB,EAEKA,IAFL,CAEU,QAFV,EAEoB,IAFpB;AAKJhE,MAAAA,EAAE,CAAC0D,MAAH,CAAU,MAAV,EACKM,IADL,CACU,WADV,EACuB,OADvB,EAEK2B,EAFL,CAEQ,SAFR,EAEmB,UAASC,CAAT,EAAY;AAAE;AACzB,YAAGA,CAAC,CAACC,aAAF,IAAmB,QAAtB,EAA+B;AAAE;AAC7B9C,UAAAA,qBAAqB;AACxB;AACJ,OANL;AAOH,KAhDW,EAiDX4C,EAjDW,CAiDR,OAjDQ,EAiDC,UAASgB,MAAT,EAAiB3D,IAAjB,EAAsB;AAC/BpB,MAAAA,iBAAiB,CAACkG,GAAG,IAAI;AACrB,eAAO9E,IAAI,CAAC+C,IAAL,IAAa+B,GAAb,GAAmB,IAAnB,GAA0B9E,IAAI,CAAC+C,IAAtC;AACH,OAFgB,CAAjB;AAGH,KArDW,EAsDXJ,EAtDW,CAsDR,UAtDQ,EAsDI,UAASgB,MAAT,EAAiB3D,IAAjB,EAAsB;AAClC,aADkC,CAElD;;AACgB,UAAI6D,UAAU,GAAG,IAAIpC,GAAJ,CAAQvB,OAAR,CAAjB;AAGA2D,MAAAA,UAAU,CAACkB,MAAX,CAAkB/E,IAAI,CAAC+C,IAAvB;AAGA/F,MAAAA,EAAE,CAAC0D,MAAH,CAAU,IAAV,EACKC,UADL,GAEKC,QAFL,CAEc,IAFd,EAGKI,IAHL,CAGU,GAHV,EAGegE,UAAU,CAAChI,EAAE,CAAC0D,MAAH,CAAU,IAAV,EAAgBM,IAAhB,CAAqB,GAArB,CAAD,CAAV,GAAsCgE,UAAU,CAAChI,EAAE,CAAC0D,MAAH,CAAU,IAAV,EAAgBM,IAAhB,CAAqB,OAArB,CAAD,CAAV,GAA0C,CAH/F,EAIKA,IAJL,CAIU,OAJV,EAImB,CAJnB;AAMAQ,MAAAA,UAAU,CAAC,MAAMxD,YAAY,CAAC6F,UAAD,CAAnB,EAAiC,IAAjC,CAAV;AACA,aAAOA,UAAP;AAKA;;AAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUa,KA3GW,EA4GXlB,EA5GW,CA4GR,OA5GQ,EA4GC,UAAUsC,SAAV,EAAqBjF,IAArB,EAA0B;AACnC+D,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACApF,MAAAA,iBAAiB,CAACkG,GAAG,IAAI9E,IAAI,CAAC+C,IAAb,CAAjB;AAEA,UAAIC,QAAQ,GAAGhD,IAAI,CAACT,KAAL,IAAc0F,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuB,CAAChH,UAAxB,GAAqCA,UAAnD,CAAf;AACA4E,MAAAA,WAAW,CAAC9C,IAAI,CAAC+C,IAAN,EAAYC,QAAZ,EAAsB,CAAtB,CAAX;AAEH,KAnHW,EAoHX3B,MApHW,CAoHJ,OApHI,EAqHX8D,IArHW,CAqHN7F,CAAC,IAAK,GAAEA,CAAC,CAACmD,IAAK,KAAInD,CAAC,CAACC,KAAM,EArHrB,CAAhB;AAwHAoF,IAAAA,SAAS,CAACS,IAAV,GAAiBb,MAAjB;AACH,GA5Jc,EA4JZ,CAACrE,OAAD,EAAU5B,QAAV,CA5JY,CAAf;AAgKAvB,EAAAA,SAAS,CAAC,MAAM0G,aAAa,CAAC9E,cAAD,CAApB,CAAT;AAKA,QAAM0G,QAAQ,GAAGvH,KAAK,gBAAG;AACrB,IAAA,SAAS,EAAC,yCADW;AAErB,IAAA,KAAK,EAAE;AAACwH,MAAAA,YAAY,EAAE,CAAf;AAAkBC,MAAAA,WAAW,EAAE,CAA/B;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAFc;AAAA,cAGpB1H;AAHoB;AAAA;AAAA;AAAA;AAAA,UAAH,GAIV,IAJZ;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,qBACKuH,QADL,eAEI;AACI,YAAA,SAAS,EAAC,8BADd;AAEI,YAAA,GAAG,EAAEjH,UAFT;AAGI,YAAA,OAAO,EAAE,MAAM;AAEX2B,cAAAA,qBAAqB,CAAC;AAACR,gBAAAA,KAAK,EAAE;AAAR,eAAD,EAAe,GAAf,CAArB;AACAnB,cAAAA,UAAU,CAACqH,OAAX,CAAmBC,QAAnB,GAA8B,IAA9B;AACAlE,cAAAA,UAAU,CAAC,MAAMpD,UAAU,CAACqH,OAAX,CAAmBC,QAAnB,GAA8B,KAArC,EAA4C,GAA5C,CAAV;AACH,aARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAaI;AACA,YAAA,SAAS,EAAC,8BADV;AAEA,YAAA,GAAG,EAAErH,gBAFL;AAGA,YAAA,OAAO,EAAE,MAAM;AACX0B,cAAAA,qBAAqB,CAAC,IAAD,EAAM,GAAN,CAArB;AACA1B,cAAAA,gBAAgB,CAACoH,OAAjB,CAAyBC,QAAzB,GAAoC,IAApC;AACAlE,cAAAA,UAAU,CAAC,MAAMnD,gBAAgB,CAACoH,OAAjB,CAAyBC,QAAzB,GAAoC,KAA3C,EAAkD,GAAlD,CAAV;AACH,aAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAwBI;AACI,YAAA,SAAS,EAAC,8BADd;AAEI,YAAA,OAAO,EAAE,MAAM;AACX,kBAAIC,OAAO,GAAG,CAAC,GAAGzF,OAAO,CAACO,MAAR,EAAJ,EAAsBmF,IAAtB,CAA2B,CAACxD,CAAD,EAAIM,CAAJ,KAAUN,CAAC,CAAC7C,KAAF,GAAUmD,CAAC,CAACnD,KAAjD,CAAd;AACA,kBAAIsG,UAAU,GAAGF,OAAO,CAACnD,GAAR,CAAYJ,CAAC,IAAI,CAACA,CAAC,CAACW,IAAH,EAASX,CAAT,CAAjB,CAAjB;AACAwB,cAAAA,aAAa,CAAC,IAAInC,GAAJ,CAAQoE,UAAR,CAAD,EAAsB,IAAtB,CAAb;AACH,aANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAwCI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,EAAE,EAAC,qBAAxC;AAAA,iCAEI;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACI,UAAA,SAAS,EAAC,+BADd;AAAA,kCAII;AACI,YAAA,SAAS,EAAC,KADd;AAAA,yCACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAMI;AACI,YAAA,SAAS,EAAC,KADd;AAAA,sBAIKlH,cAAc,gBAEX;AAAK,cAAA,SAAS,EAAC,KAAf;AACK,cAAA,KAAK,EAAE;AACHmH,gBAAAA,UAAU,EAAE,CADT;AAEHC,gBAAAA,MAAM,EAAG,iBAFN;AAGHT,gBAAAA,YAAY,EAAE,EAHX;AAIHU,gBAAAA,eAAe,kBAAE9F,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CAAF,iDAAE,aAA6ByB,KAJ3C;AAKHA,gBAAAA,KAAK,EAAE7C,mBAAmB,kBAAC2C,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CAAD,kDAAC,cAA6ByB,KAA9B;AALvB,eADZ;AAAA,sCAQI;AAAK,gBAAA,KAAK,EAAE;AAAC6F,kBAAAA,QAAQ,EAAC;AAAV,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eASI;AACI,gBAAA,SAAS,EAAC,qBADd;AAAA,uCAEI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CAEI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,+CACK/F,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CADL,kDACK,cAA6BY;AADlC;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAKI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,2CACI;AAAK,sBAAA,KAAK,EAAE;AACRwG,wBAAAA,MAAM,EAAG,aAAYxI,mBAAmB,kBAAC2C,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CAAD,kDAAC,cAA6ByB,KAA9B,CAAqC,EADrE;AAERkF,wBAAAA,YAAY,EAAE,KAFN;AAGRpG,wBAAAA,KAAK,EAAE,MAHC;AAIRgH,wBAAAA,KAAK,EAAE;AAJC,uBAAZ;AAAA,6CAOI;AACI,wBAAA,GAAG,EAAE1I,QAAQ,CAACD,mBAAmB,kBAAC2C,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CAAD,kDAAC,cAA6ByB,KAA9B,CAAnB,IAA2D,OAA3D,GAAqE,aAArE,GAAqF,aAAtF,CADjB;AAEI,wBAAA,SAAS,EAAC,KAFd;AAGI,wBAAA,KAAK,EAAE,EAHX;AAII,wBAAA,MAAM,EAAE;AAJZ;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBATJ,eAoCI;AAAI,gBAAA,SAAS,EAAC,MAAd;AAAqB,gBAAA,KAAK,EAAE;AAAC4F,kBAAAA,eAAe,EAAEzI,mBAAmB,kBAAC2C,OAAO,CAACqB,GAAR,CAAY5C,cAAZ,CAAD,kDAAC,cAA6ByB,KAA9B;AAArC;AAA5B;AAAA;AAAA;AAAA;AAAA,sBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFW,GA0CT;AA9CV;AAAA;AAAA;AAAA;AAAA,kBANJ,eAsDI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AACI,cAAA,GAAG,EAAEnC,KADT;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,GAAG,EAAC,GAHR;AAII,cAAA,GAAG,EAAC,IAJR;AAKI,cAAA,IAAI,EAAC,GALT;AAMI,cAAA,YAAY,EAAEC,UANlB;AAOI,cAAA,QAAQ,EAAE,MAAM;AACZC,gBAAAA,aAAa,CAACgE,QAAQ,CAAClE,KAAK,CAACwH,OAAN,CAAclG,KAAf,CAAT,CAAb;AACH;AATL;AAAA;AAAA;AAAA;AAAA,oBADJ,EAUarB,UAVb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtDJ,eAkEI;AAAA;AAAA;AAAA;AAAA,kBAlEJ,eAoEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI;AAAA,qCACI;AAAO,gBAAA,OAAO,EAAC,cAAf;AAA8B,gBAAA,SAAS,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,SAAS,EAAC,YAA9B;AAA2C,gBAAA,EAAE,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBApEJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCJ,eA+HI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,uBAAY,OAA9D;AAAsE,uBAAY,eAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/HJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2II;AAAK,MAAA,KAAK,EAAC,gCAAX;AAA4C,MAAA,EAAE,EAAC,cAA/C;AAA8D,MAAA,QAAQ,EAAC,IAAvE;AAA4E,MAAA,IAAI,EAAC,QAAjF;AAA0F,yBAAgB,mBAA1G;AAA8H,qBAAY,MAA1I;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,6CAAX;AAAyD,QAAA,IAAI,EAAC,UAA9D;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,aAAV;AAAwB,cAAA,EAAE,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,OAA5B;AAAoC,8BAAa,OAAjD;AAAyD,4BAAW,OAApE;AAAA,qCACI;AAAM,+BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,oCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,mBAA5B;AAAgD,8BAAa,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA3IJ;AAAA,kBADJ;AAuKH;;GAtrBQL,iB;;KAAAA,iB;AAsrBR;AAED,eAAeA,iBAAf","sourcesContent":["\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { getWidth, getHeight } from \"./utils/pageDimensions\";\nimport encode from './utils/encode';\nimport getCorrectTextColor from \"./utils/getCorrectTextColor\";\nimport getImage from \"./img/getImage\";\nimport dataFile from './righe.csv';\nimport {csv} from 'd3-request';\nimport element from \"./histogramElement\";\n\nconst transitionDuration = 100;\n\nfunction ModifiedHistogram({ title }) {\n    let [dataArray, setDataArray] = useState([]);\n    let wheel = useRef(null);\n    let [wheelSpeed, setWheelSpeed] = useState(5);\n    let addRectBtn = useRef(null);\n    let addRandomRectBtn = useRef(null);\n    let [svgWidth, setSvgWidth] = useState();\n    let [svgHeight, setSvgHeight] = useState(550);\n    let widthInput = useRef(null);\n    let [currentElement, setCurrentElement] = useState(null);\n\n    let margin = {\n        top: 40,\n        right: 20,\n        bottom: 70,\n        left: 40\n    };\n    let width = svgWidth - margin.left - margin.right;\n    let height = svgHeight - margin.top - margin.bottom;\n\n    let maxYvalue = d3.max(dataArray, d => d.value);\n\n    useEffect(() => {\n        // On Component Mount\n        function resizeHistogramContainer(){\n            setSvgWidth((document.getElementById('histogram-container')?.clientWidth))\n        }\n        window.addEventListener('resize', resizeHistogramContainer)\n\n        return () => {\n            // On Component Dismount\n            window.removeEventListener('resize', resizeHistogramContainer)\n        }\n    }, []);\n\n    // Adds an element to the map at the end of the map => adds a rect after the last one\n    function addRandomElementToMap(data, transitionDuration){\n        let id = uuidv4();\n        dataMap.set(id, element(id, data?.value, data?.color));\n        /*\n\n                let newX = d3\n                    .scaleBand()\n                    .rangeRound([0, width])\n                    .padding(0)\n                    .domain([...dataMap.values()].map(x => x.name));\n\n\n                // scale Y axis with transition\n                d3.select('#yAxis')\n                    .transition()\n                    .duration(transitionDuration)\n                    .call(d3.axisBottom(newX));*/\n\n        // needed to scale all the other rects\n        let newY = d3.scaleLinear()\n            .range([0, height])\n            .domain([d3.max([...dataMap.values()], d => d.value), 0])\n\n        // scale Y axis with transition\n        d3.select('#yAxis')\n            .transition()\n            .duration(transitionDuration)\n            .call(d3.axisLeft(newY));\n\n        // movement of the other rects\n        d3.select('svg')\n            .selectAll('rect')\n            .transition()\n            .duration(transitionDuration)\n            .attr('x', (_, i) => i*(width / (dataArray.length+1)))\n            .attr('y', (d, i) => newY(d.value))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n            .attr('value', d => d.value)\n            .attr('height', function(d) { return height - newY(d.value); })\n\n        // new rect creation, it must be put after the last rect, with overflow on the x axis\n        let newRect = d3.select('svg')\n            .select('g')\n            .append('rect')\n            .attr('x', (dataMap.size-1)*(width / (dataArray.length)))//(dataMap.size)*(width / (dataArray.length)))\n            .attr('y', newY(dataMap.get(id).value))\n            .attr('width', (width) / (dataArray.length > 0 ? dataArray.length : 1))\n            .attr('value', dataMap.get(id).value)\n            .attr('height', height - newY(dataMap.get(id).value))\n            .attr('fill', dataMap.get(id).color)\n\n        // move the new rect on its right position\n        newRect.transition()\n            .duration(transitionDuration)\n            .attr('x', (dataMap.size-1)*(width / (dataArray.length+1)))\n            .attr('width', (width) / (dataArray.length+1 > 0 ? dataArray.length+1 : 1))\n\n\n\n\n        setTimeout(() => setDataArray(new Map(dataMap)), transitionDuration);\n    }\n\n    function addRandomElementToMapAfterXuuid(xUuid){\n        let dataMapEntries = dataMap.entries();\n\n        let newMap = new Map();\n\n        let newElementUuid = uuidv4();\n        [...dataMapEntries].forEach(([k, v]) => {\n            newMap.set(k, v);\n            if(k == xUuid) {\n                newMap.set(newElementUuid, element(newElementUuid))\n            }\n        })\n\n        setDataArray(newMap);\n\n    }\n\n    // onMount: used to initialize the map\n    useEffect(() => {/*\n        let initialMap = new Map();\n        let id = 0;\n\n        d3.range(Math.floor(Math.random()*30)).map(x => {\n            id = uuidv4();\n            initialMap.set(id, element(id));\n        })\n\n        setDataArray(initialMap);*/\n        setSvgWidth(parseInt(document.getElementById('histogram-container')?.clientWidth)); // if i put it in the default value of useState, histogram-container is not loaded yet, so it returns 0\n    }, []);\n\n\n\n\n    /*\n        // X axis: scale and draw:\n        var x = d3.scaleLinear()\n            .domain([0, 1000]) // axis y range\n            .range([0, width]);//data.lenght]); // axis x range*/\n\n    let x = d3\n        .scaleBand()\n        .rangeRound([0, width])\n        .padding(0.05)\n        .domain(dataArray.map(x => x.name));\n\n\n    // Y axis: scale and draw:\n    let y = d3.scaleLinear()\n        .range([0, height])\n        .domain([d3.max(dataArray, d => d.value), 0])\n        .domain([d3.max(dataArray, d => d.value), 0])\n\n\n\n    d3.select('body')\n        .attr('focusable', 'true')\n        .on('keydown', function(e) { // manage  n (or N) keys\n            if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                addRandomElementToMap();\n            }\n        });\n\n    /* Function to update a value of a specified rect (d3 element)\n    * (with transitions to other rects too) */\n    function updateValue(uuid, newValue, transitionTime){\n        let d3element = d3.select(`#rect${encode(uuid)}`);\n        let oldValue = dataMap.get(uuid).value;\n\n        if(newValue <= 0.5)\n            newValue = 0.5\n\n\n        if(newValue > maxYvalue){ // here the user changes the value with a value grater then the max value\n            // update y axis value (scale domain)\n            y.domain([newValue, 0]);\n            d3.select('#yAxis')\n                .transition()\n                .duration(transitionTime)\n                .call(d3.axisLeft(y));\n\n        } else if(oldValue == maxYvalue){ // user decreases the value of the maximum rect\n            let secondMaxYvalue = d3.max([...dataArray].filter(x => x.value != oldValue), d => d.value);\n            let demainValue = 0;\n\n            /* if the user decides to decrease the maximum rect there are 2 scenarios:\n                    1) newValue for the (old) maximum rect is less then the second maximum value\n                        -> the (old) maximum rect is no longer the maximum rect\n                    2) newValue for the (old) maximum rect is grater or equal then the second maximum value\n                        -> the (old) maximum rect is still the maximum rect */\n            if(newValue < secondMaxYvalue){ // scenario 1)\n                demainValue = secondMaxYvalue;\n            } else { // scenario 2)\n                demainValue = newValue;\n            }\n\n            // update y axis value (scale domain)\n            y.domain([demainValue, 0]);\n            d3.select('#yAxis')\n                .transition()\n                .duration(transitionTime)\n                .call(d3.axisLeft(y));\n        }\n\n        // update each rect\n        d3.select('svg')\n            .selectAll('rect')\n            .transition()\n            .duration(transitionTime)\n            .attr('y', d => y(d.value))\n            .attr('height', d => height - y(d.value));\n\n        // update rect modified with new height\n        d3element\n            .transition()\n            .duration(transitionTime)\n            .attr('y', y(newValue))\n            .attr('height', height - y(newValue));\n\n        // data update after all transition finish\n        setTimeout(() => {\n            setDataArray(oldMap => {\n                let newMap = new Map(oldMap);\n                let elementToModify = oldMap.get(uuid);\n                elementToModify.value = newValue;\n                newMap.set(uuid, elementToModify);\n                return newMap;\n            })\n        }, transitionTime);\n    }\n    function highlightRect(uuid){\n\n        d3.selectAll('rect')\n            .attr('stroke-width', 0)\n            .attr('stroke', null)\n            .style('opacity', 1)\n            .on('mouseover', function(actual, data){\n                if(currentElement == data.uuid)\n                    return;\n                d3.select(this)\n\n                    .attr('opacity', 0.6)\n                    .attr('stroke', 'black')\n                    .attr('stroke-width', 1)\n            })\n            .on('mouseleave', function(actual, data){\n                if(!(currentElement != null && data.uuid == currentElement))\n                    d3.select(this)\n                        .attr('opacity', 1)\n                        .attr('stroke', null)\n            })\n\n\n        if(uuid == null)\n            return\n\n        d3.select(`#rect${encode(uuid)}`)\n            .attr('stroke', 'black')\n            .attr('stroke-width', '3px')\n            .on('mouseleave', null)\n            .on('mouseover', null)\n    }\n\n\n    function updateDataMap(newDataMap, transitionDuration = 400){\n        const t = d3\n            .select('#rectsContainer')\n            .transition()\n            .duration(transitionDuration)\n\n        // update y axis value (scale domain)\n        y.domain([d3.max([...newDataMap.values()].map(x => x.value)), 0]);\n\n        d3.select('#yAxis')\n            .transition()\n            .duration(transitionDuration)\n            .call(d3.axisLeft(y));\n\n\nconsole.log('newDataMap.values()', [...newDataMap.values()])\n        let newX = x.domain([...newDataMap.values()].map(x => x.name));\n\n\n\n        d3\n            .select('#rectsContainer')\n\n            .selectAll('rect')\n            // .data([...newDataMap.values()])\n            .data(dataArray)\n            .transition(t)\n            //.merge([...newDataMap.values()])\n            .delay((d, i) => i*20)\n            .attr('x', d => x(d.name))\n\n            .attr('width', x.bandwidth())\n            .attr('y', (d, i) => y(d.value))\n            .attr('height', d => height - y(d.value))\n            .style('fill', d => d.color);\n/*\n        d3\n            .select('#rectsContainer')\n            .append('rect')\n\n\n            .attr('width', x.bandwidth()/2)\n            .attr('y', 10)\n            .attr('height', 40)\n            .style('fill', 'yellow')\n            .transition().duration(transitionDuration)\n            .attr('width', x.bandwidth())\n            .style('fill', 'black')\n*/\n\n        d3\n            .select('#xAxis')\n            .transition()\n            .duration(transitionDuration)\n            .call(d3.axisBottom(x))\n            .selectAll('text')\n            .attr('transform', 'translate(-20, 20) rotate(-70)');\n\n        /*\n                d3\n                    .select('#rectsContainer')\n                    .append('rect')\n                   // .transition(t)\n                    //.delay((d, i) => i*20)\n                    .attr('x', d => x(d.name))\n\n                    .attr('width', x.bandwidth())\n                    .attr('y', (d, i) => y(d.value))\n                    .attr('height', d => height - y(d.value))\n        */\n\n\n\n        setTimeout(() => {\n            setDataArray(newDataMap)\n        }, transitionDuration);\n    }\n\n\n    useEffect(function(){\n        csv(dataFile, function (error, data) {\n            if (error) {\n                console.log(error);\n                return;\n            }\n            console.log(data instanceof Array, data.length)\n            let newMap = data.map(d => {\n                let id = uuidv4();\n                return [id, element(id, d.value, d.color, d.name)]\n            })\n            setDataArray(new Map(newMap))\n        })\n    }, [])\n\n    useLayoutEffect(() => {\n\n\n        d3.select('#histogram svg').remove();\n\n        let svg = d3.select(\"#histogram\")\n            .append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.bottom + margin.top)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`)\n            .attr('id', 'rectsContainer')\n\n\n\n\n\n\n        var xAxis = svg.append(\"g\")\n            .attr('id', 'xAxis')\n            .attr(\"transform\", \"translate(0,\" + height + \")\");\n\n\n        let yAxis = svg.append(\"g\")\n            .attr('id', 'yAxis');\n\n        xAxis.call(d3.axisBottom(x))\n            .selectAll('text')\n            .attr('transform', 'translate(-20, 20) rotate(-70)');\n\n        yAxis.call(d3.axisLeft(y));\n\n\n\n\n        let histogram = d3.select('#rectsContainer').selectAll('rect')\n            .data(dataArray)\n            .enter()\n            .append('rect')\n            .attr('x', (d, i) => x(d.name))\n            .attr('y', (d, i) => y(d.value))\n            .attr('id', d => `rect${encode(d.uuid)}`)\n            .attr('width', x.bandwidth())\n            .attr('height', function(d) { return height - y(d.value); })\n            .style('fill', d => d.color)\n            .on('mouseenter', function (event, data) {\n\n\n                d3.select('body')\n                    .attr('focusable', 'true')\n                    .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                        switch (e.keyIdentifier) {\n                            case 'Up':\n                                updateValue(data.uuid, data.value+wheelSpeed, wheelSpeed*10)\n                                break;\n                            case 'Down':\n                                updateValue(data.uuid, data.value-wheelSpeed, wheelSpeed*10)\n                                break;\n                            case 'U+0008': // delete key (to delete key)\n                               /* dataMap.delete(data.uuid);\n                                setDataArray(new Map(dataMap))*/\n                                break;\n                            case 'U+004E': // 'n' key\n                                addRandomElementToMapAfterXuuid(data.uuid); // insertion after the current (this) element\n                                break;\n                        }\n                    });\n\n            })\n            .on('mouseleave', function (actual, i) {\n                if(!(currentElement != null && i.uuid == currentElement))\n                    d3.select(this)\n                        .attr('opacity', 1)\n                        .attr('stroke', null)\n\n\n                d3.select('body')\n                    .attr('focusable', 'false')\n                    .on('keydown', function(e) { // manage up, down and canc and n (or N) keys\n                        if(e.keyIdentifier == 'U+004E'){ // 'n' key\n                            addRandomElementToMap();\n                        }\n                    });\n            })\n            .on('click', function(actual, data){\n                setCurrentElement(old => {\n                    return data.uuid == old ? null : data.uuid;\n                })\n            })\n            .on('dblclick', function(actual, data){\n                return;\n// TODO delete\n                let newDataMap = new Map(dataMap);\n\n                \n                newDataMap.delete(data.uuid);\n\n\n                d3.select(this)\n                    .transition()\n                    .duration(1000)\n                    .attr('x', parseFloat(d3.select(this).attr('x'))+parseFloat(d3.select(this).attr('width'))/2)\n                    .attr('width', 0)\n\n                setTimeout(() => setDataArray(newDataMap), 1000);\n                return newDataMap;\n\n\n\n\n                /*  Not working code to animate delete   */\n\n                /*\n\n                // Y axis: scale and draw:\n                var y = d3.scaleLinear()\n                    .range([0, height])\n                    .domain([d3.max(dataArray, d => d.value), 0])\n                yAxis.transition()\n                    .duration(1000)\n                    .call(d3.axisLeft(y));\n\n\n\n                d3.selectAll('rect').data([...newDataMap.values()].filter(x => x.uuid != data.uuid))\n                    .transition()\n                    .duration(1000)\n                    .attr('x', (_, i) => i*(translateX = width / (dataArray.length-1)))\n                    .attr('y', (d, i) => y(d.value))\n                    .attr('width', (width) / (dataArray.length-1 > 0 ? dataArray.length-1 : 1))\n                    .attr('value', d => d.value)\n                    .attr('height', function(d) { return height - y(d.value); })\n                    .style('fill', d => d.color)\n\n\n                setTimeout(() => setDataArray(oldMap => {\n                    oldMap.delete(data.uuid);\n\n\n                    return new Map(oldMap);\n                }), 1000) */\n\n            })\n            .on('wheel', function (wheelInfo, data){\n                console.log('ehrrl')\n                setCurrentElement(old => data.uuid)\n\n                let newValue = data.value + (wheelInfo.deltaY < 0 ? -wheelSpeed : wheelSpeed);\n                updateValue(data.uuid, newValue, 0);\n\n            })\n            .append('title')\n            .html(d => `${d.name}: ${d.value}`)\n\n\n        histogram.exit().remove();\n    }, [dataMap, svgWidth]);\n\n\n\n    useEffect(() => highlightRect(currentElement))\n\n\n\n\n    const titleBtn = title ? <button\n        className='btn btn-outline-secondary disabled mr-3'\n        style={{borderRadius: 0, borderRight: 0, borderLeft: 0}}>\n        {title}\n    </button> : null;\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <div className='row'>\n                    <div className='col'>\n                        {titleBtn}\n                        <button\n                            className='btn btn-outline-primary mr-3'\n                            ref={addRectBtn}\n                            onClick={() => {\n\n                                addRandomElementToMap({value: 900}, 500)\n                                addRectBtn.current.disabled = true;\n                                setTimeout(() => addRectBtn.current.disabled = false, 500)\n                            }}>\n                            Add Rect\n                        </button>\n                        <button\n                        className='btn btn-outline-primary mr-3'\n                        ref={addRandomRectBtn}\n                        onClick={() => {\n                            addRandomElementToMap(null,500)\n                            addRandomRectBtn.current.disabled = true;\n                            setTimeout(() => addRandomRectBtn.current.disabled = false, 500)\n                        }}>\n                        Add Random Rect\n                    </button>\n\n                        <button\n                            className='btn btn-outline-primary mr-3'\n                            onClick={() => {\n                                let dataArr = [...dataMap.values()].sort((x, y) => x.value > y.value);\n                                let mapElement = dataArr.map(x => [x.uuid, x]);\n                                updateDataMap(new Map(mapElement), 1000)\n                            }}>\n                            Add Random Rect\n                        </button>\n\n                        {/*[...dataMap.keys()].map(k => <div>{k} <span class={'text-danger'}>or</span> {encode(k)}</div>)*/}\n\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-12 col-md-8 p-0' id='histogram-container'>\n\n                        <div id=\"histogram\" />\n                    </div>\n                    <div\n                        className='col-12 col-md-4 p-0 container'\n\n                    >\n                        <div\n                            className='row'> <h4>Menu</h4></div>\n                        <div\n                            className='row'\n\n                        >\n                            {currentElement ?\n\n                                <div className='col'\n                                     style={{\n                                         paddingTop: 5,\n                                         border: `1px solid black`,\n                                         borderRadius: 15,\n                                         backgroundColor: dataMap.get(currentElement)?.color,\n                                         color: getCorrectTextColor(dataMap.get(currentElement)?.color)\n                                     }}>\n                                    <div style={{fontSize:16}}> Current Element:</div>\n                                    <div\n                                        className='container-fluid p-0'>\n                                        <div className='row'>\n\n                                            <div className='col-9'>\n                                                {dataMap.get(currentElement)?.value}\n                                            </div>\n                                            <div className='col-3'>\n                                                <div style={{\n                                                    border: `1px solid ${getCorrectTextColor(dataMap.get(currentElement)?.color)}`,\n                                                    borderRadius: '3px',\n                                                    width: '30px',\n                                                    float: 'right'\n                                                }}>\n\n                                                    <img\n                                                        src={getImage(getCorrectTextColor(dataMap.get(currentElement)?.color) == 'white' ? 'whitePencil' : 'blackPencil')}\n                                                        className='m-1'\n                                                        width={20}\n                                                        height={20}/>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <hr className='my-2' style={{backgroundColor: getCorrectTextColor(dataMap.get(currentElement)?.color)}}/>\n\n\n                                </div>\n                                : 'not selected'}\n                        </div>\n                        <div className='row'>\n                            <input\n                                ref={wheel}\n                                type=\"range\"\n                                min=\"1\"\n                                max=\"20\"\n                                step=\"1\"\n                                defaultValue={wheelSpeed}\n                                onChange={() => {\n                                    setWheelSpeed(parseInt(wheel.current.value))\n                                }}/>{wheelSpeed}\n                        </div>\n                        <div>\n                        </div>\n                        <div className=\"input-group\">\n                            <div>\n                                <label htmlFor=\"customRange1\" className=\"form-label row\">\n                                    Example range\n                                </label>\n                            </div>\n                            <div className=\"row\">\n                                <input type=\"range\" className=\"form-range\" id=\"customRange1\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    Launch demo modal\n                </button>\n\n\n\n            </div>\n\n\n\n\n            <div class=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            ...\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n\n\n\n\n\n    );\n};\n\nexport default ModifiedHistogram;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}