{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport * as d3 from 'd3';\nimport { select } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([100, 150, 20]);\n  const [width, setWidth] = useState(0);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    function updateWidth() {\n      setWidth(containerRef.current.clientWidth / (data.length + 1));\n    }\n\n    const handleResize = debounce(updateWidth, 500);\n    updateWidth();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [data.length]);\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const update = select('g').selectAll('circle').data(data);\n      update.enter().append('circle').merge(update).attr('r', d => d).attr('cx', (_, i) => width * (i + 1)).attr('cy', () => Math.random() * 100).attr('stroke', (_, i) => i % 2 === 0 ? '#f80' : '#aaf').attr('fill', (_, i) => i % 2 === 0 ? 'orange' : '#44f');\n      update.exit().remove();\n    }\n  }, [data, width]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"100%\",\n    height: \"350\",\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: \"translate(0, 100)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"yHpTld3dLYOVaSIEyEGrx8mnbas=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","debounce","d3","select","App","data","setData","width","setWidth","containerRef","updateWidth","current","clientWidth","length","handleResize","window","addEventListener","removeEventListener","Array","isArray","update","selectAll","enter","append","merge","attr","d","_","i","Math","random","exit","remove"],"mappings":";;;;AACA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,eAAlC,EAAmDC,SAAnD,QAAoE,OAApE;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,QAAuB,IAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC,GAAD,EAAK,GAAL,EAAS,EAAT,CAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMW,YAAY,GAAGZ,MAAM,CAAC,IAAD,CAA3B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,aAASU,WAAT,GAAuB;AACrBF,MAAAA,QAAQ,CAACC,YAAY,CAACE,OAAb,CAAqBC,WAArB,IAAoCP,IAAI,CAACQ,MAAL,GAAc,CAAlD,CAAD,CAAR;AACD;;AACD,UAAMC,YAAY,GAAGb,QAAQ,CAACS,WAAD,EAAc,GAAd,CAA7B;AACAA,IAAAA,WAAW;AACXK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAb;AACD,GARQ,EAQN,CAACT,IAAI,CAACQ,MAAN,CARM,CAAT;AAUAd,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAImB,KAAK,CAACC,OAAN,CAAcd,IAAd,CAAJ,EAAyB;AACvB,YAAMe,MAAM,GAAGjB,MAAM,CAAC,GAAD,CAAN,CAAYkB,SAAZ,CAAsB,QAAtB,EAAgChB,IAAhC,CAAqCA,IAArC,CAAf;AAEAe,MAAAA,MAAM,CACDE,KADL,GAEKC,MAFL,CAEY,QAFZ,EAGKC,KAHL,CAGWJ,MAHX,EAIKK,IAJL,CAIU,GAJV,EAIgBC,CAAD,IAAOA,CAJtB,EAKKD,IALL,CAKU,IALV,EAKgB,CAACE,CAAD,EAAIC,CAAJ,KAAUrB,KAAK,IAAIqB,CAAC,GAAG,CAAR,CAL/B,EAMKH,IANL,CAMU,IANV,EAMgB,MAAMI,IAAI,CAACC,MAAL,KAAgB,GANtC,EAOKL,IAPL,CAOU,QAPV,EAOoB,CAACE,CAAD,EAAIC,CAAJ,KAAWA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc,MAAd,GAAuB,MAPtD,EAQKH,IARL,CAQU,MARV,EAQkB,CAACE,CAAD,EAAIC,CAAJ,KAAWA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc,QAAd,GAAyB,MARtD;AAUAR,MAAAA,MAAM,CAACW,IAAP,GAAcC,MAAd;AACD;AACF,GAhBc,EAgBZ,CAAC3B,IAAD,EAAOE,KAAP,CAhBY,CAAf;AAkBA,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,MAAM,EAAC,KAAzB;AAA+B,IAAA,GAAG,EAAEE,YAApC;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;GAtCQL,G;;KAAAA,G;AAsCR;AAED,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport * as d3 from 'd3';\nimport { select } from 'd3';\n\nfunction App() {\n  const [data, setData] = useState([100,150,20]);\n  const [width, setWidth] = useState(0);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    function updateWidth() {\n      setWidth(containerRef.current.clientWidth / (data.length + 1));\n    }\n    const handleResize = debounce(updateWidth, 500);\n    updateWidth();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [data.length]);\n\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const update = select('g').selectAll('circle').data(data);\n\n      update\n          .enter()\n          .append('circle')\n          .merge(update)\n          .attr('r', (d) => d)\n          .attr('cx', (_, i) => width * (i + 1))\n          .attr('cy', () => Math.random() * 100)\n          .attr('stroke', (_, i) => (i % 2 === 0 ? '#f80' : '#aaf'))\n          .attr('fill', (_, i) => (i % 2 === 0 ? 'orange' : '#44f'));\n\n      update.exit().remove();\n    }\n  }, [data, width]);\n\n  return (\n      <svg width=\"100%\" height=\"350\" ref={containerRef}>\n        <g transform=\"translate(0, 100)\" />\n      </svg>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}