{"ast":null,"code":"var _jsxFileName = \"/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport * as d3 from 'd3';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  const [data, setData] = useState([{\n    value: 80,\n    color: getRandomColor()\n  }, {\n    value: 110,\n    color: getRandomColor()\n  }, {\n    value: 140,\n    color: getRandomColor()\n  }, {\n    value: 300,\n    color: getRandomColor()\n  }, {\n    value: 140,\n    color: getRandomColor()\n  }, {\n    value: 110,\n    color: getRandomColor()\n  }, {\n    value: 80,\n    color: getRandomColor()\n  }]);\n  const [width, setWidth] = useState(svgWidth);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    function updateWidth() {//setWidth(containerRef.current.clientWidth / (data.length + 1));\n    }\n\n    const handleResize = debounce(updateWidth, 500);\n    updateWidth();\n    window.addEventListener('resize', handleResize);\n    console.log(\"resizing\");\n    return () => window.removeEventListener('resize', handleResize);\n  }, [data.length]);\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const histogram = select('svg').selectAll('rect').data(data);\n      histogram.enter().append('rect').merge(histogram).attr('x', (_, i) => i * width / (data.length + 1) + 100 / data.length).attr('transform', d => `translate(0,${svgHeight - d.value * 300 / svgHeight})`) // per allinearli tutti verso il basso\n      .attr(\"width\", (width - 100) / (data.length + 1)).attr(\"height\", d => d.value * 300 / svgHeight).attr('fill', d => d.color).on('mouseenter', function (actual, i) {\n        select(this).attr('opacity', 0.6).append('text').text(\"ciao\").enter();\n      }).on('mouseleave', function (actual, i) {\n        select(this).attr('opacity', 1);\n      });\n      console.log(data);\n      histogram.exit().remove();\n    }\n  }, [data, width]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setData(d => [...d, {\n          value: Math.floor(Math.random() * 100),\n          color: getRandomColor()\n        }]);\n      },\n      children: \"ciaoo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(i => i.value + \", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"eDwphhjQd+8mOvzmweIxkwF9UZc=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alessandroturnu/WebstormProjects/d3_graph/src/App.js"],"names":["React","useRef","useState","useLayoutEffect","useEffect","debounce","d3","select","getRandomColor","App","svgWidth","svgHeight","data","setData","value","color","width","setWidth","containerRef","updateWidth","handleResize","window","addEventListener","console","log","removeEventListener","length","Array","isArray","histogram","selectAll","enter","append","merge","attr","_","i","d","on","actual","text","exit","remove","Math","floor","random","map"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport * as d3 from 'd3';\nimport { select } from 'd3';\nimport { getRandomColor } from \"./utils/randomColors\";\n\nfunction App() {\n  const svgWidth = 1000;\n  const svgHeight = 300;\n  const [data, setData] = useState([\n      {value: 80, color: getRandomColor()},\n      {value: 110, color: getRandomColor()},\n      {value: 140, color: getRandomColor()},\n      {value: 300, color: getRandomColor()},\n      {value: 140, color: getRandomColor()},\n      {value: 110, color: getRandomColor()},\n      {value: 80, color: getRandomColor()}\n      ]);\n  const [width, setWidth] = useState(svgWidth);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    function updateWidth() {\n      //setWidth(containerRef.current.clientWidth / (data.length + 1));\n    }\n    const handleResize = debounce(updateWidth, 500);\n    updateWidth();\n    window.addEventListener('resize', handleResize);\n    console.log(\"resizing\");\n    return () => window.removeEventListener('resize', handleResize);\n  }, [data.length]);\n\n  useLayoutEffect(() => {\n    if (Array.isArray(data)) {\n      const histogram = select('svg').selectAll('rect').data(data);\n\n      histogram\n          .enter()\n          .append('rect')\n          .merge(histogram)\n          .attr('x', (_, i) => i * width/(data.length+1) + (100/data.length))\n          .attr('transform', d => `translate(0,${svgHeight-(d.value * 300 / svgHeight)})`) // per allinearli tutti verso il basso\n          .attr(\"width\", (width-100) / (data.length + 1))\n          .attr(\"height\", d => d.value * 300 / svgHeight)\n          .attr('fill', d => d.color)\n          .on('mouseenter', function (actual, i) {\n              select(this).attr('opacity', 0.6).append('text').text(\"ciao\").enter()\n          })\n          .on('mouseleave', function (actual, i) {\n        select(this).attr('opacity', 1)\n    })\n      console.log(data);\n      histogram.exit().remove();\n    }\n  }, [data, width]);\n\n  return (\n      <>\n\n        <svg width={svgWidth} height={svgHeight} ref={containerRef}>\n\n        </svg>\n        <button\n          onClick={() => {\n            setData(d => [...d, {\n              value: Math.floor(Math.random() * 100),\n              color: getRandomColor()\n            }])\n          }}>\n            ciaoo\n        </button>\n        <div>\n          {data.map(i => i.value + \", \")}</div>\n      </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}